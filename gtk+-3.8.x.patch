--- gdk/broadway/broadway-server.c	Tue Jan 28 03:19:46 2014
+++ gdk/broadway/broadway-server.c	Mon Sep 29 16:57:35 2014
@@ -10,15 +10,1115 @@
 #include <stdlib.h>
 #include <string.h>
 #include <errno.h>
+#ifdef HAVE_UNISTD_H
 #include <unistd.h>
+#elif defined (G_OS_WIN32)
+#include <io.h>
+#endif
+#if defined (__MINGW32__)
+/* src/port/crypt.c */
+/*	$NetBSD: crypt.c,v 1.18 2001/03/01 14:37:35 wiz Exp $	*/
+
+/*
+ * Copyright (c) 1989, 1993
+ *	The Regents of the University of California.  All rights reserved.
+ *
+ * This code is derived from software contributed to Berkeley by
+ * Tom Truscott.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *	  notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *	  notice, this list of conditions and the following disclaimer in the
+ *	  documentation and/or other materials provided with the distribution.
+ * 3. Neither the name of the University nor the names of its contributors
+ *	  may be used to endorse or promote products derived from this software
+ *	  without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED.	IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
+
+#if defined(LIBC_SCCS) && !defined(lint)
+#if 0
+static char sccsid[] = "@(#)crypt.c	8.1.1.1 (Berkeley) 8/18/93";
+#else
+__RCSID("$NetBSD: crypt.c,v 1.18 2001/03/01 14:37:35 wiz Exp $");
+#endif
+#endif   /* not lint */
+
+//#include "c.h"
+
+#include <limits.h>
+
+#ifndef WIN32
+#include <unistd.h>
+#endif
+
+static int	des_setkey(const char *key);
+static int	des_cipher(const char *in, char *out, long salt, int num_iter);
+
+/*
+ * UNIX password, and DES, encryption.
+ * By Tom Truscott, trt@rti.rti.org,
+ * from algorithms by Robert W. Baldwin and James Gillogly.
+ *
+ * References:
+ * "Mathematical Cryptology for Computer Scientists and Mathematicians,"
+ * by Wayne Patterson, 1987, ISBN 0-8476-7438-X.
+ *
+ * "Password Security: A Case History," R. Morris and Ken Thompson,
+ * Communications of the ACM, vol. 22, pp. 594-597, Nov. 1979.
+ *
+ * "DES will be Totally Insecure within Ten Years," M.E. Hellman,
+ * IEEE Spectrum, vol. 16, pp. 32-39, July 1979.
+ */
+
+/* =====  Configuration ==================== */
+
+/*
+ * define "MUST_ALIGN" if your compiler cannot load/store
+ * long integers at arbitrary (e.g. odd) memory locations.
+ * (Either that or never pass unaligned addresses to des_cipher!)
+ */
+/* #define	MUST_ALIGN */
+
+#ifdef CHAR_BITS
+#if CHAR_BITS != 8
+#error C_block structure assumes 8 bit characters
+#endif
+#endif
+
+/*
+ * define "B64" to be the declaration for a 64 bit integer.
+ * XXX this feature is currently unused, see "endian" comment below.
+ */
+#define B64 __int64
+
+/*
+ * define "LARGEDATA" to get faster permutations, by using about 72 kilobytes
+ * of lookup tables.  This speeds up des_setkey() and des_cipher(), but has
+ * little effect on crypt().
+ */
+/* #define	LARGEDATA */
+
+/* compile with "-DSTATIC=void" when profiling */
+#ifndef STATIC
+#define STATIC	static void
+#endif
+
+/*
+ * Define the "int32_t" type for integral type with a width of at least
+ * 32 bits.
+ */
+typedef int int32_t;
+
+/* ==================================== */
+
+#define _PASSWORD_EFMT1 '_'		/* extended encryption format */
+
+/*
+ * Cipher-block representation (Bob Baldwin):
+ *
+ * DES operates on groups of 64 bits, numbered 1..64 (sigh).  One
+ * representation is to store one bit per byte in an array of bytes.  Bit N of
+ * the NBS spec is stored as the LSB of the Nth byte (index N-1) in the array.
+ * Another representation stores the 64 bits in 8 bytes, with bits 1..8 in the
+ * first byte, 9..16 in the second, and so on.	The DES spec apparently has
+ * bit 1 in the MSB of the first byte, but that is particularly noxious so we
+ * bit-reverse each byte so that bit 1 is the LSB of the first byte, bit 8 is
+ * the MSB of the first byte.  Specifically, the 64-bit input data and key are
+ * converted to LSB format, and the output 64-bit block is converted back into
+ * MSB format.
+ *
+ * DES operates internally on groups of 32 bits which are expanded to 48 bits
+ * by permutation E and shrunk back to 32 bits by the S boxes.	To speed up
+ * the computation, the expansion is applied only once, the expanded
+ * representation is maintained during the encryption, and a compression
+ * permutation is applied only at the end.	To speed up the S-box lookups,
+ * the 48 bits are maintained as eight 6 bit groups, one per byte, which
+ * directly feed the eight S-boxes.  Within each byte, the 6 bits are the
+ * most significant ones.  The low two bits of each byte are zero.	(Thus,
+ * bit 1 of the 48 bit E expansion is stored as the "4"-valued bit of the
+ * first byte in the eight byte representation, bit 2 of the 48 bit value is
+ * the "8"-valued bit, and so on.)	In fact, a combined "SPE"-box lookup is
+ * used, in which the output is the 64 bit result of an S-box lookup which
+ * has been permuted by P and expanded by E, and is ready for use in the next
+ * iteration.  Two 32-bit wide tables, SPE[0] and SPE[1], are used for this
+ * lookup.	Since each byte in the 48 bit path is a multiple of four, indexed
+ * lookup of SPE[0] and SPE[1] is simple and fast.	The key schedule and
+ * "salt" are also converted to this 8*(6+2) format.  The SPE table size is
+ * 8*64*8 = 4K bytes.
+ *
+ * To speed up bit-parallel operations (such as XOR), the 8 byte
+ * representation is "union"ed with 32 bit values "i0" and "i1", and, on
+ * machines which support it, a 64 bit value "b64".  This data structure,
+ * "C_block", has two problems.  First, alignment restrictions must be
+ * honored.  Second, the byte-order (e.g. little-endian or big-endian) of
+ * the architecture becomes visible.
+ *
+ * The byte-order problem is unfortunate, since on the one hand it is good
+ * to have a machine-independent C_block representation (bits 1..8 in the
+ * first byte, etc.), and on the other hand it is good for the LSB of the
+ * first byte to be the LSB of i0.	We cannot have both these things, so we
+ * currently use the "little-endian" representation and avoid any multi-byte
+ * operations that depend on byte order.  This largely precludes use of the
+ * 64-bit datatype since the relative order of i0 and i1 are unknown.  It
+ * also inhibits grouping the SPE table to look up 12 bits at a time.  (The
+ * 12 bits can be stored in a 16-bit field with 3 low-order zeroes and 1
+ * high-order zero, providing fast indexing into a 64-bit wide SPE.)  On the
+ * other hand, 64-bit datatypes are currently rare, and a 12-bit SPE lookup
+ * requires a 128 kilobyte table, so perhaps this is not a big loss.
+ *
+ * Permutation representation (Jim Gillogly):
+ *
+ * A transformation is defined by its effect on each of the 8 bytes of the
+ * 64-bit input.  For each byte we give a 64-bit output that has the bits in
+ * the input distributed appropriately.  The transformation is then the OR
+ * of the 8 sets of 64-bits.  This uses 8*256*8 = 16K bytes of storage for
+ * each transformation.  Unless LARGEDATA is defined, however, a more compact
+ * table is used which looks up 16 4-bit "chunks" rather than 8 8-bit chunks.
+ * The smaller table uses 16*16*8 = 2K bytes for each transformation.  This
+ * is slower but tolerable, particularly for password encryption in which
+ * the SPE transformation is iterated many times.  The small tables total 9K
+ * bytes, the large tables total 72K bytes.
+ *
+ * The transformations used are:
+ * IE3264: MSB->LSB conversion, initial permutation, and expansion.
+ *	This is done by collecting the 32 even-numbered bits and applying
+ *	a 32->64 bit transformation, and then collecting the 32 odd-numbered
+ *	bits and applying the same transformation.	Since there are only
+ *	32 input bits, the IE3264 transformation table is half the size of
+ *	the usual table.
+ * CF6464: Compression, final permutation, and LSB->MSB conversion.
+ *	This is done by two trivial 48->32 bit compressions to obtain
+ *	a 64-bit block (the bit numbering is given in the "CIFP" table)
+ *	followed by a 64->64 bit "cleanup" transformation.	(It would
+ *	be possible to group the bits in the 64-bit block so that 2
+ *	identical 32->32 bit transformations could be used instead,
+ *	saving a factor of 4 in space and possibly 2 in time, but
+ *	byte-ordering and other complications rear their ugly head.
+ *	Similar opportunities/problems arise in the key schedule
+ *	transforms.)
+ * PC1ROT: MSB->LSB, PC1 permutation, rotate, and PC2 permutation.
+ *	This admittedly baroque 64->64 bit transformation is used to
+ *	produce the first code (in 8*(6+2) format) of the key schedule.
+ * PC2ROT[0]: Inverse PC2 permutation, rotate, and PC2 permutation.
+ *	It would be possible to define 15 more transformations, each
+ *	with a different rotation, to generate the entire key schedule.
+ *	To save space, however, we instead permute each code into the
+ *	next by using a transformation that "undoes" the PC2 permutation,
+ *	rotates the code, and then applies PC2.  Unfortunately, PC2
+ *	transforms 56 bits into 48 bits, dropping 8 bits, so PC2 is not
+ *	invertible.  We get around that problem by using a modified PC2
+ *	which retains the 8 otherwise-lost bits in the unused low-order
+ *	bits of each byte.	The low-order bits are cleared when the
+ *	codes are stored into the key schedule.
+ * PC2ROT[1]: Same as PC2ROT[0], but with two rotations.
+ *	This is faster than applying PC2ROT[0] twice,
+ *
+ * The Bell Labs "salt" (Bob Baldwin):
+ *
+ * The salting is a simple permutation applied to the 48-bit result of E.
+ * Specifically, if bit i (1 <= i <= 24) of the salt is set then bits i and
+ * i+24 of the result are swapped.	The salt is thus a 24 bit number, with
+ * 16777216 possible values.  (The original salt was 12 bits and could not
+ * swap bits 13..24 with 36..48.)
+ *
+ * It is possible, but ugly, to warp the SPE table to account for the salt
+ * permutation.  Fortunately, the conditional bit swapping requires only
+ * about four machine instructions and can be done on-the-fly with about an
+ * 8% performance penalty.
+ */
+
+typedef union
+{
+	unsigned char b[8];
+	struct
+	{
+		int32_t		i0;
+		int32_t		i1;
+	}			b32;
+#if defined(B64)
+	B64			b64;
+#endif
+} C_block;
+
+/*
+ * Convert twenty-four-bit long in host-order
+ * to six bits (and 2 low-order zeroes) per char little-endian format.
+ */
+#define TO_SIX_BIT(rslt, src) {				\
+		C_block cvt;				\
+		cvt.b[0] = src; src >>= 6;		\
+		cvt.b[1] = src; src >>= 6;		\
+		cvt.b[2] = src; src >>= 6;		\
+		cvt.b[3] = src;				\
+		rslt = (cvt.b32.i0 & 0x3f3f3f3fL) << 2; \
+	}
+
+/*
+ * These macros may someday permit efficient use of 64-bit integers.
+ */
+#define ZERO(d,d0,d1)			d0 = 0, d1 = 0
+#define LOAD(d,d0,d1,bl)		d0 = (bl).b32.i0, d1 = (bl).b32.i1
+#define LOADREG(d,d0,d1,s,s0,s1)	d0 = s0, d1 = s1
+#define OR(d,d0,d1,bl)			d0 |= (bl).b32.i0, d1 |= (bl).b32.i1
+#define STORE(s,s0,s1,bl)		(bl).b32.i0 = s0, (bl).b32.i1 = s1
+#define DCL_BLOCK(d,d0,d1)		int32_t d0, d1
+
+#if defined(LARGEDATA)
+ /* Waste memory like crazy.  Also, do permutations in line */
+#define LGCHUNKBITS 3
+#define CHUNKBITS	(1<<LGCHUNKBITS)
+#define PERM6464(d,d0,d1,cpp,p)				\
+	LOAD(d,d0,d1,(p)[(0<<CHUNKBITS)+(cpp)[0]]);		\
+	OR (d,d0,d1,(p)[(1<<CHUNKBITS)+(cpp)[1]]);		\
+	OR (d,d0,d1,(p)[(2<<CHUNKBITS)+(cpp)[2]]);		\
+	OR (d,d0,d1,(p)[(3<<CHUNKBITS)+(cpp)[3]]);		\
+	OR (d,d0,d1,(p)[(4<<CHUNKBITS)+(cpp)[4]]);		\
+	OR (d,d0,d1,(p)[(5<<CHUNKBITS)+(cpp)[5]]);		\
+	OR (d,d0,d1,(p)[(6<<CHUNKBITS)+(cpp)[6]]);		\
+	OR (d,d0,d1,(p)[(7<<CHUNKBITS)+(cpp)[7]]);
+#define PERM3264(d,d0,d1,cpp,p)				\
+	LOAD(d,d0,d1,(p)[(0<<CHUNKBITS)+(cpp)[0]]);		\
+	OR (d,d0,d1,(p)[(1<<CHUNKBITS)+(cpp)[1]]);		\
+	OR (d,d0,d1,(p)[(2<<CHUNKBITS)+(cpp)[2]]);		\
+	OR (d,d0,d1,(p)[(3<<CHUNKBITS)+(cpp)[3]]);
+#else
+ /* "small data" */
+#define LGCHUNKBITS 2
+#define CHUNKBITS	(1<<LGCHUNKBITS)
+#define PERM6464(d,d0,d1,cpp,p)				\
+	{ C_block tblk; permute(cpp,&tblk,p,8); LOAD (d,d0,d1,tblk); }
+#define PERM3264(d,d0,d1,cpp,p)				\
+	{ C_block tblk; permute(cpp,&tblk,p,4); LOAD (d,d0,d1,tblk); }
+#endif   /* LARGEDATA */
+
+STATIC		init_des(void);
+STATIC		init_perm(C_block[64 / CHUNKBITS][1 << CHUNKBITS], unsigned char[64], int, int);
+
+#ifndef LARGEDATA
+STATIC		permute(unsigned char *, C_block *, C_block *, int);
+#endif
+#ifdef DEBUG
+STATIC		prtab(char *, unsigned char *, int);
+#endif
+
+
+#ifndef LARGEDATA
+STATIC
+permute(cp, out, p, chars_in)
+unsigned char *cp;
+C_block    *out;
+C_block    *p;
+int			chars_in;
+{
+	DCL_BLOCK(D, D0, D1);
+	C_block    *tp;
+	int			t;
+
+	ZERO(D, D0, D1);
+	do
+	{
+		t = *cp++;
+		tp = &p[t & 0xf];
+		OR(D, D0, D1, *tp);
+		p += (1 << CHUNKBITS);
+		tp = &p[t >> 4];
+		OR(D, D0, D1, *tp);
+		p += (1 << CHUNKBITS);
+	} while (--chars_in > 0);
+	STORE(D, D0, D1, *out);
+}
+#endif   /* LARGEDATA */
+
+
+/* =====  (mostly) Standard DES Tables ==================== */
+
+static const unsigned char IP[] = {		/* initial permutation */
+	58, 50, 42, 34, 26, 18, 10, 2,
+	60, 52, 44, 36, 28, 20, 12, 4,
+	62, 54, 46, 38, 30, 22, 14, 6,
+	64, 56, 48, 40, 32, 24, 16, 8,
+	57, 49, 41, 33, 25, 17, 9, 1,
+	59, 51, 43, 35, 27, 19, 11, 3,
+	61, 53, 45, 37, 29, 21, 13, 5,
+	63, 55, 47, 39, 31, 23, 15, 7,
+};
+
+/* The final permutation is the inverse of IP - no table is necessary */
+
+static const unsigned char ExpandTr[] = {		/* expansion operation */
+	32, 1, 2, 3, 4, 5,
+	4, 5, 6, 7, 8, 9,
+	8, 9, 10, 11, 12, 13,
+	12, 13, 14, 15, 16, 17,
+	16, 17, 18, 19, 20, 21,
+	20, 21, 22, 23, 24, 25,
+	24, 25, 26, 27, 28, 29,
+	28, 29, 30, 31, 32, 1,
+};
+
+static const unsigned char PC1[] = {	/* permuted choice table 1 */
+	57, 49, 41, 33, 25, 17, 9,
+	1, 58, 50, 42, 34, 26, 18,
+	10, 2, 59, 51, 43, 35, 27,
+	19, 11, 3, 60, 52, 44, 36,
+
+	63, 55, 47, 39, 31, 23, 15,
+	7, 62, 54, 46, 38, 30, 22,
+	14, 6, 61, 53, 45, 37, 29,
+	21, 13, 5, 28, 20, 12, 4,
+};
+
+static const unsigned char Rotates[] = {		/* PC1 rotation schedule */
+	1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1,
+};
+
+/* note: each "row" of PC2 is left-padded with bits that make it invertible */
+static const unsigned char PC2[] = {	/* permuted choice table 2 */
+	9, 18, 14, 17, 11, 24, 1, 5,
+	22, 25, 3, 28, 15, 6, 21, 10,
+	35, 38, 23, 19, 12, 4, 26, 8,
+	43, 54, 16, 7, 27, 20, 13, 2,
+
+	0, 0, 41, 52, 31, 37, 47, 55,
+	0, 0, 30, 40, 51, 45, 33, 48,
+	0, 0, 44, 49, 39, 56, 34, 53,
+	0, 0, 46, 42, 50, 36, 29, 32,
+};
+
+static const unsigned char S[8][64] = { /* 48->32 bit substitution tables */
+	/* S[1]			*/
+	{14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7,
+		0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8,
+		4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0,
+	15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13},
+	/* S[2]			*/
+	{15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10,
+		3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5,
+		0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15,
+	13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9},
+	/* S[3]			*/
+	{10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8,
+		13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1,
+		13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7,
+	1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12},
+	/* S[4]			*/
+	{7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15,
+		13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9,
+		10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4,
+	3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14},
+	/* S[5]			*/
+	{2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9,
+		14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6,
+		4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14,
+	11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3},
+	/* S[6]			*/
+	{12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11,
+		10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8,
+		9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6,
+	4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13},
+	/* S[7]			*/
+	{4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1,
+		13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6,
+		1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2,
+	6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12},
+	/* S[8]			*/
+	{13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7,
+		1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2,
+		7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8,
+	2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11}
+};
+
+static const unsigned char P32Tr[] = {	/* 32-bit permutation function */
+	16, 7, 20, 21,
+	29, 12, 28, 17,
+	1, 15, 23, 26,
+	5, 18, 31, 10,
+	2, 8, 24, 14,
+	32, 27, 3, 9,
+	19, 13, 30, 6,
+	22, 11, 4, 25,
+};
+
+static const unsigned char CIFP[] = {	/* compressed/interleaved permutation */
+	1, 2, 3, 4, 17, 18, 19, 20,
+	5, 6, 7, 8, 21, 22, 23, 24,
+	9, 10, 11, 12, 25, 26, 27, 28,
+	13, 14, 15, 16, 29, 30, 31, 32,
+
+	33, 34, 35, 36, 49, 50, 51, 52,
+	37, 38, 39, 40, 53, 54, 55, 56,
+	41, 42, 43, 44, 57, 58, 59, 60,
+	45, 46, 47, 48, 61, 62, 63, 64,
+};
+
+static const unsigned char itoa64[] =	/* 0..63 => ascii-64 */
+"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
+
+
+/* =====  Tables that are initialized at run time  ==================== */
+
+
+static unsigned char a64toi[128];		/* ascii-64 => 0..63 */
+
+/* Initial key schedule permutation */
+static C_block PC1ROT[64 / CHUNKBITS][1 << CHUNKBITS];
+
+/* Subsequent key schedule rotation permutations */
+static C_block PC2ROT[2][64 / CHUNKBITS][1 << CHUNKBITS];
+
+/* Initial permutation/expansion table */
+static C_block IE3264[32 / CHUNKBITS][1 << CHUNKBITS];
+
+/* Table that combines the S, P, and E operations.	*/
+static int32_t SPE[2][8][64];
+
+/* compressed/interleaved => final permutation table */
+static C_block CF6464[64 / CHUNKBITS][1 << CHUNKBITS];
+
+
+/* ==================================== */
+
+
+static C_block constdatablock;	/* encryption constant */
+static char cryptresult[1 + 4 + 4 + 11 + 1];	/* encrypted result */
+
+extern char *__md5crypt(const char *, const char *);	/* XXX */
+extern char *__bcrypt(const char *, const char *);		/* XXX */
+
+
+/*
+ * Return a pointer to static data consisting of the "setting"
+ * followed by an encryption produced by the "key" and "setting".
+ */
+char *
+crypt(key, setting)
+const char *key;
+const char *setting;
+{
+	char	   *encp;
+	int32_t		i;
+	int			t;
+	int32_t		salt;
+	int			num_iter,
+				salt_size;
+	C_block		keyblock,
+				rsltblock;
+
+#if 0
+	/* Non-DES encryption schemes hook in here. */
+	if (setting[0] == _PASSWORD_NONDES)
+	{
+		switch (setting[1])
+		{
+			case '2':
+				return (__bcrypt(key, setting));
+			case '1':
+			default:
+				return (__md5crypt(key, setting));
+		}
+	}
+#endif
+
+	for (i = 0; i < 8; i++)
+	{
+		if ((t = 2 * (unsigned char) (*key)) != 0)
+			key++;
+		keyblock.b[i] = t;
+	}
+	if (des_setkey((char *) keyblock.b))		/* also initializes "a64toi" */
+		return (NULL);
+
+	encp = &cryptresult[0];
+	switch (*setting)
+	{
+		case _PASSWORD_EFMT1:
+
+			/*
+			 * Involve the rest of the password 8 characters at a time.
+			 */
+			while (*key)
+			{
+				if (des_cipher((char *) (void *) &keyblock,
+							   (char *) (void *) &keyblock, 0L, 1))
+					return (NULL);
+				for (i = 0; i < 8; i++)
+				{
+					if ((t = 2 * (unsigned char) (*key)) != 0)
+						key++;
+					keyblock.b[i] ^= t;
+				}
+				if (des_setkey((char *) keyblock.b))
+					return (NULL);
+			}
+
+			*encp++ = *setting++;
+
+			/* get iteration count */
+			num_iter = 0;
+			for (i = 4; --i >= 0;)
+			{
+				if ((t = (unsigned char) setting[i]) == '\0')
+					t = '.';
+				encp[i] = t;
+				num_iter = (num_iter << 6) | a64toi[t];
+			}
+			setting += 4;
+			encp += 4;
+			salt_size = 4;
+			break;
+		default:
+			num_iter = 25;
+			salt_size = 2;
+	}
+
+	salt = 0;
+	for (i = salt_size; --i >= 0;)
+	{
+		if ((t = (unsigned char) setting[i]) == '\0')
+			t = '.';
+		encp[i] = t;
+		salt = (salt << 6) | a64toi[t];
+	}
+	encp += salt_size;
+	if (des_cipher((char *) (void *) &constdatablock,
+				   (char *) (void *) &rsltblock, salt, num_iter))
+		return (NULL);
+
+	/*
+	 * Encode the 64 cipher bits as 11 ascii characters.
+	 */
+	i = ((int32_t) ((rsltblock.b[0] << 8) | rsltblock.b[1]) << 8) |
+		rsltblock.b[2];
+	encp[3] = itoa64[i & 0x3f];
+	i >>= 6;
+	encp[2] = itoa64[i & 0x3f];
+	i >>= 6;
+	encp[1] = itoa64[i & 0x3f];
+	i >>= 6;
+	encp[0] = itoa64[i];
+	encp += 4;
+	i = ((int32_t) ((rsltblock.b[3] << 8) | rsltblock.b[4]) << 8) |
+		rsltblock.b[5];
+	encp[3] = itoa64[i & 0x3f];
+	i >>= 6;
+	encp[2] = itoa64[i & 0x3f];
+	i >>= 6;
+	encp[1] = itoa64[i & 0x3f];
+	i >>= 6;
+	encp[0] = itoa64[i];
+	encp += 4;
+	i = ((int32_t) ((rsltblock.b[6]) << 8) | rsltblock.b[7]) << 2;
+	encp[2] = itoa64[i & 0x3f];
+	i >>= 6;
+	encp[1] = itoa64[i & 0x3f];
+	i >>= 6;
+	encp[0] = itoa64[i];
+
+	encp[3] = 0;
+
+	return (cryptresult);
+}
+
+
+/*
+ * The Key Schedule, filled in by des_setkey() or setkey().
+ */
+#define KS_SIZE 16
+static C_block KS[KS_SIZE];
+
+static volatile int des_ready = 0;
+
+/*
+ * Set up the key schedule from the key.
+ */
+static int
+des_setkey(key)
+const char *key;
+{
+	DCL_BLOCK(K, K0, K1);
+	C_block    *ptabp;
+	int			i;
+
+	if (!des_ready)
+		init_des();
+
+	PERM6464(K, K0, K1, (unsigned char *) key, (C_block *) PC1ROT);
+	key = (char *) &KS[0];
+	STORE(K & ~0x03030303L, K0 & ~0x03030303L, K1, *(C_block *) key);
+	for (i = 1; i < 16; i++)
+	{
+		key += sizeof(C_block);
+		STORE(K, K0, K1, *(C_block *) key);
+		ptabp = (C_block *) PC2ROT[Rotates[i] - 1];
+		PERM6464(K, K0, K1, (unsigned char *) key, ptabp);
+		STORE(K & ~0x03030303L, K0 & ~0x03030303L, K1, *(C_block *) key);
+	}
+	return (0);
+}
+
+/*
+ * Encrypt (or decrypt if num_iter < 0) the 8 chars at "in" with abs(num_iter)
+ * iterations of DES, using the given 24-bit salt and the pre-computed key
+ * schedule, and store the resulting 8 chars at "out" (in == out is permitted).
+ *
+ * NOTE: the performance of this routine is critically dependent on your
+ * compiler and machine architecture.
+ */
+static int
+des_cipher(in, out, salt, num_iter)
+const char *in;
+char	   *out;
+long		salt;
+int			num_iter;
+{
+	/* variables that we want in registers, most important first */
+#if defined(pdp11)
+	int			j;
+#endif
+	int32_t		L0,
+				L1,
+				R0,
+				R1,
+				k;
+	C_block    *kp;
+	int			ks_inc,
+				loop_count;
+	C_block		B;
+
+	L0 = salt;
+	TO_SIX_BIT(salt, L0);		/* convert to 4*(6+2) format */
+
+#if defined(__vax__) || defined(pdp11)
+	salt = ~salt;				/* "x &~ y" is faster than "x & y". */
+#define SALT (~salt)
+#else
+#define SALT salt
+#endif
+
+#if defined(MUST_ALIGN)
+	B.b[0] = in[0];
+	B.b[1] = in[1];
+	B.b[2] = in[2];
+	B.b[3] = in[3];
+	B.b[4] = in[4];
+	B.b[5] = in[5];
+	B.b[6] = in[6];
+	B.b[7] = in[7];
+	LOAD(L, L0, L1, B);
+#else
+	LOAD(L, L0, L1, *(C_block *) in);
+#endif
+	LOADREG(R, R0, R1, L, L0, L1);
+	L0 &= 0x55555555L;
+	L1 &= 0x55555555L;
+	L0 = (L0 << 1) | L1;		/* L0 is the even-numbered input bits */
+	R0 &= 0xaaaaaaaaL;
+	R1 = (R1 >> 1) & 0x55555555L;
+	L1 = R0 | R1;				/* L1 is the odd-numbered input bits */
+	STORE(L, L0, L1, B);
+	PERM3264(L, L0, L1, B.b, (C_block *) IE3264);		/* even bits */
+	PERM3264(R, R0, R1, B.b + 4, (C_block *) IE3264);	/* odd bits */
+
+	if (num_iter >= 0)
+	{							/* encryption */
+		kp = &KS[0];
+		ks_inc = sizeof(*kp);
+	}
+	else
+	{							/* decryption */
+		num_iter = -num_iter;
+		kp = &KS[KS_SIZE - 1];
+		ks_inc = -(long) sizeof(*kp);
+	}
+
+	while (--num_iter >= 0)
+	{
+		loop_count = 8;
+		do
+		{
+
+#define SPTAB(t, i) \
+		(*(int32_t *)((unsigned char *)(t) + (i)*(sizeof(int32_t)/4)))
+#if defined(gould)
+			/* use this if B.b[i] is evaluated just once ... */
+#define DOXOR(x,y,i)	x^=SPTAB(SPE[0][i],B.b[i]); y^=SPTAB(SPE[1][i],B.b[i]);
+#else
+#if defined(pdp11)
+			/* use this if your "long" int indexing is slow */
+#define DOXOR(x,y,i)	j=B.b[i]; x^=SPTAB(SPE[0][i],j); y^=SPTAB(SPE[1][i],j);
+#else
+			/* use this if "k" is allocated to a register ... */
+#define DOXOR(x,y,i)	k=B.b[i]; x^=SPTAB(SPE[0][i],k); y^=SPTAB(SPE[1][i],k);
+#endif
+#endif
+
+#define CRUNCH(p0, p1, q0, q1)	\
+			k = ((q0) ^ (q1)) & SALT;				\
+			B.b32.i0 = k ^ (q0) ^ kp->b32.i0;		\
+			B.b32.i1 = k ^ (q1) ^ kp->b32.i1;		\
+			kp = (C_block *)((char *)kp+ks_inc);	\
+							\
+			DOXOR(p0, p1, 0);		\
+			DOXOR(p0, p1, 1);		\
+			DOXOR(p0, p1, 2);		\
+			DOXOR(p0, p1, 3);		\
+			DOXOR(p0, p1, 4);		\
+			DOXOR(p0, p1, 5);		\
+			DOXOR(p0, p1, 6);		\
+			DOXOR(p0, p1, 7);
+
+			CRUNCH(L0, L1, R0, R1);
+			CRUNCH(R0, R1, L0, L1);
+		} while (--loop_count != 0);
+		kp = (C_block *) ((char *) kp - (ks_inc * KS_SIZE));
+
+
+		/* swap L and R */
+		L0 ^= R0;
+		L1 ^= R1;
+		R0 ^= L0;
+		R1 ^= L1;
+		L0 ^= R0;
+		L1 ^= R1;
+	}
+
+	/* store the encrypted (or decrypted) result */
+	L0 = ((L0 >> 3) & 0x0f0f0f0fL) | ((L1 << 1) & 0xf0f0f0f0L);
+	L1 = ((R0 >> 3) & 0x0f0f0f0fL) | ((R1 << 1) & 0xf0f0f0f0L);
+	STORE(L, L0, L1, B);
+	PERM6464(L, L0, L1, B.b, (C_block *) CF6464);
+#if defined(MUST_ALIGN)
+	STORE(L, L0, L1, B);
+	out[0] = B.b[0];
+	out[1] = B.b[1];
+	out[2] = B.b[2];
+	out[3] = B.b[3];
+	out[4] = B.b[4];
+	out[5] = B.b[5];
+	out[6] = B.b[6];
+	out[7] = B.b[7];
+#else
+	STORE(L, L0, L1, *(C_block *) out);
+#endif
+	return (0);
+}
+
+
+/*
+ * Initialize various tables.  This need only be done once.  It could even be
+ * done at compile time, if the compiler were capable of that sort of thing.
+ */
+STATIC
+init_des()
+{
+	int			i,
+				j;
+	int32_t		k;
+	int			tableno;
+	static unsigned char perm[64],
+				tmp32[32];		/* "static" for speed */
+
+/*	static volatile long init_start = 0; not used */
+
+	/*
+	 * table that converts chars "./0-9A-Za-z"to integers 0-63.
+	 */
+	for (i = 0; i < 64; i++)
+		a64toi[itoa64[i]] = i;
+
+	/*
+	 * PC1ROT - bit reverse, then PC1, then Rotate, then PC2.
+	 */
+	for (i = 0; i < 64; i++)
+		perm[i] = 0;
+	for (i = 0; i < 64; i++)
+	{
+		if ((k = PC2[i]) == 0)
+			continue;
+		k += Rotates[0] - 1;
+		if ((k % 28) < Rotates[0])
+			k -= 28;
+		k = PC1[k];
+		if (k > 0)
+		{
+			k--;
+			k = (k | 07) - (k & 07);
+			k++;
+		}
+		perm[i] = k;
+	}
+#ifdef DEBUG
+	prtab("pc1tab", perm, 8);
+#endif
+	init_perm(PC1ROT, perm, 8, 8);
+
+	/*
+	 * PC2ROT - PC2 inverse, then Rotate (once or twice), then PC2.
+	 */
+	for (j = 0; j < 2; j++)
+	{
+		unsigned char pc2inv[64];
+
+		for (i = 0; i < 64; i++)
+			perm[i] = pc2inv[i] = 0;
+		for (i = 0; i < 64; i++)
+		{
+			if ((k = PC2[i]) == 0)
+				continue;
+			pc2inv[k - 1] = i + 1;
+		}
+		for (i = 0; i < 64; i++)
+		{
+			if ((k = PC2[i]) == 0)
+				continue;
+			k += j;
+			if ((k % 28) <= j)
+				k -= 28;
+			perm[i] = pc2inv[k];
+		}
+#ifdef DEBUG
+		prtab("pc2tab", perm, 8);
+#endif
+		init_perm(PC2ROT[j], perm, 8, 8);
+	}
+
+	/*
+	 * Bit reverse, then initial permutation, then expansion.
+	 */
+	for (i = 0; i < 8; i++)
+	{
+		for (j = 0; j < 8; j++)
+		{
+			k = (j < 2) ? 0 : IP[ExpandTr[i * 6 + j - 2] - 1];
+			if (k > 32)
+				k -= 32;
+			else if (k > 0)
+				k--;
+			if (k > 0)
+			{
+				k--;
+				k = (k | 07) - (k & 07);
+				k++;
+			}
+			perm[i * 8 + j] = k;
+		}
+	}
+#ifdef DEBUG
+	prtab("ietab", perm, 8);
+#endif
+	init_perm(IE3264, perm, 4, 8);
+
+	/*
+	 * Compression, then final permutation, then bit reverse.
+	 */
+	for (i = 0; i < 64; i++)
+	{
+		k = IP[CIFP[i] - 1];
+		if (k > 0)
+		{
+			k--;
+			k = (k | 07) - (k & 07);
+			k++;
+		}
+		perm[k - 1] = i + 1;
+	}
+#ifdef DEBUG
+	prtab("cftab", perm, 8);
+#endif
+	init_perm(CF6464, perm, 8, 8);
+
+	/*
+	 * SPE table
+	 */
+	for (i = 0; i < 48; i++)
+		perm[i] = P32Tr[ExpandTr[i] - 1];
+	for (tableno = 0; tableno < 8; tableno++)
+	{
+		for (j = 0; j < 64; j++)
+		{
+			k = (((j >> 0) & 01) << 5) |
+				(((j >> 1) & 01) << 3) |
+				(((j >> 2) & 01) << 2) |
+				(((j >> 3) & 01) << 1) |
+				(((j >> 4) & 01) << 0) |
+				(((j >> 5) & 01) << 4);
+			k = S[tableno][k];
+			k = (((k >> 3) & 01) << 0) |
+				(((k >> 2) & 01) << 1) |
+				(((k >> 1) & 01) << 2) |
+				(((k >> 0) & 01) << 3);
+			for (i = 0; i < 32; i++)
+				tmp32[i] = 0;
+			for (i = 0; i < 4; i++)
+				tmp32[4 * tableno + i] = (k >> i) & 01;
+			k = 0;
+			for (i = 24; --i >= 0;)
+				k = (k << 1) | tmp32[perm[i] - 1];
+			TO_SIX_BIT(SPE[0][tableno][j], k);
+			k = 0;
+			for (i = 24; --i >= 0;)
+				k = (k << 1) | tmp32[perm[i + 24] - 1];
+			TO_SIX_BIT(SPE[1][tableno][j], k);
+		}
+	}
+
+	des_ready = 1;
+}
+
+/*
+ * Initialize "perm" to represent transformation "p", which rearranges
+ * (perhaps with expansion and/or contraction) one packed array of bits
+ * (of size "chars_in" characters) into another array (of size "chars_out"
+ * characters).
+ *
+ * "perm" must be all-zeroes on entry to this routine.
+ */
+STATIC
+init_perm(perm, p, chars_in, chars_out)
+C_block		perm[64 / CHUNKBITS][1 << CHUNKBITS];
+unsigned char p[64];
+int			chars_in,
+			chars_out;
+{
+	int			i,
+				j,
+				k,
+				l;
+
+	for (k = 0; k < chars_out * 8; k++)
+	{							/* each output bit position */
+		l = p[k] - 1;			/* where this bit comes from */
+		if (l < 0)
+			continue;			/* output bit is always 0 */
+		i = l >> LGCHUNKBITS;	/* which chunk this bit comes from */
+		l = 1 << (l & (CHUNKBITS - 1)); /* mask for this bit */
+		for (j = 0; j < (1 << CHUNKBITS); j++)
+		{						/* each chunk value */
+			if ((j & l) != 0)
+				perm[i][j].b[k >> 3] |= 1 << (k & 07);
+		}
+	}
+}
+
+/*
+ * "setkey" routine (for backwards compatibility)
+ */
+#ifdef NOT_USED
+int
+setkey(key)
+const char *key;
+{
+	int			i,
+				j,
+				k;
+	C_block		keyblock;
+
+	for (i = 0; i < 8; i++)
+	{
+		k = 0;
+		for (j = 0; j < 8; j++)
+		{
+			k <<= 1;
+			k |= (unsigned char) *key++;
+		}
+		keyblock.b[i] = k;
+	}
+	return (des_setkey((char *) keyblock.b));
+}
+
+/*
+ * "encrypt" routine (for backwards compatibility)
+ */
+static int
+encrypt(block, flag)
+char	   *block;
+int			flag;
+{
+	int			i,
+				j,
+				k;
+	C_block		cblock;
+
+	for (i = 0; i < 8; i++)
+	{
+		k = 0;
+		for (j = 0; j < 8; j++)
+		{
+			k <<= 1;
+			k |= (unsigned char) *block++;
+		}
+		cblock.b[i] = k;
+	}
+	if (des_cipher((char *) &cblock, (char *) &cblock, 0L, (flag ? -1 : 1)))
+		return (1);
+	for (i = 7; i >= 0; i--)
+	{
+		k = cblock.b[i];
+		for (j = 7; j >= 0; j--)
+		{
+			*--block = k & 01;
+			k >>= 1;
+		}
+	}
+	return (0);
+}
+#endif
+
+#ifdef DEBUG
+STATIC
+prtab(s, t, num_rows)
+char	   *s;
+unsigned char *t;
+int			num_rows;
+{
+	int			i,
+				j;
+
+	(void) printf("%s:\n", s);
+	for (i = 0; i < num_rows; i++)
+	{
+		for (j = 0; j < 8; j++)
+			(void) printf("%3d", t[i * 8 + j]);
+		(void) printf("\n");
+	}
+	(void) printf("\n");
+}
+
+#endif
+#else
 #include <crypt.h>
+#endif
+#ifdef HAVE_SYS_MMAN_H
 #include <sys/mman.h>
+#endif
 #include <sys/stat.h>
 #include <fcntl.h>
 #include <sys/types.h>
+#ifdef G_OS_UNIX
 #include <sys/socket.h>
 #include <netinet/in.h>
 #include <netinet/tcp.h>
+#endif
+#ifdef G_OS_WIN32
+#include <windows.h>
+#include <string.h>
+#endif
 
 typedef struct BroadwayInput BroadwayInput;
 typedef struct BroadwayWindow BroadwayWindow;
@@ -857,6 +1957,73 @@
   }
 }
 
+static void *
+map_named_shm (char *name, gsize size)
+{
+#ifdef G_OS_UNIX
+
+  int fd;
+  void *ptr;
+
+  fd = shm_open(name, O_RDONLY, 0600);
+  if (fd == -1)
+    {
+      perror ("Failed to shm_open");
+      return NULL;
+    }
+
+  ptr = mmap(0, size, PROT_READ, MAP_SHARED, fd, 0);
+
+  (void) close(fd);
+
+  shm_unlink (name);
+
+  return ptr;
+
+#elif defined(G_OS_WIN32)
+
+  int fd;
+  void *ptr;
+  char *shmpath;
+  void *map = ((void *)-1);
+
+  if (*name == '/')
+    ++name;
+  shmpath = g_build_filename (g_get_tmp_dir (), name, NULL);
+
+  fd = open(shmpath, O_RDONLY, 0600);
+  if (fd == -1)
+    {
+      g_free (shmpath);
+      perror ("Failed to shm_open");
+      return NULL;
+    }
+
+  if (size == 0)
+    ptr = map;
+  else
+    {
+      HANDLE h, fm;
+      h = (HANDLE)_get_osfhandle (fd);
+      fm = CreateFileMapping (h, NULL, PAGE_READONLY, 0, (DWORD)size, NULL);
+      ptr = MapViewOfFile (fm, FILE_MAP_READ, 0, 0, (size_t)size);
+      CloseHandle (fm);
+    }
+
+  (void) close(fd);
+
+  remove (shmpath);
+  g_free (shmpath);
+
+  return ptr;
+
+#else
+#error "No shm mapping supported"
+
+  return NULL;
+#endif
+}
+
 static char *
 parse_line (char *line, char *key)
 {
@@ -901,7 +2069,7 @@
 generate_handshake_response_wsietf_v7 (const gchar *key)
 {
   gsize digest_len = 20;
-  guchar digest[digest_len];
+  guchar digest[20];
   GChecksum *checksum;
 
   checksum = g_checksum_new (G_CHECKSUM_SHA1);
@@ -1831,7 +2999,11 @@
 shm_data_unmap (void *_data)
 {
   ShmSurfaceData *data = _data;
+#ifdef G_OS_UNIX
   munmap (data->data, data->data_size);
+#elif defined(G_OS_WIN32)
+  UnmapViewOfFile (data->data);
+#endif
   g_free (data);
 }
 
@@ -1847,7 +3019,6 @@
   cairo_surface_t *surface;
   gsize size;
   void *ptr;
-  int fd;
 
   window = g_hash_table_lookup (server->id_ht,
 				GINT_TO_POINTER (id));
@@ -1860,17 +3031,7 @@
 
   size = width * height * sizeof (guint32);
 
-  fd = shm_open(name, O_RDONLY, 0600);
-  if (fd == -1)
-    {
-      perror ("Failed to shm_open");
-      return NULL;
-    }
-
-  ptr = mmap(0, size, PROT_READ, MAP_SHARED, fd, 0);
-  (void) close(fd);
-
-  shm_unlink (name);
+  ptr = map_named_shm (name, size);
 
   if (ptr == NULL)
     return NULL;
--- gdk/broadway/broadwayd.c	Tue Jan 28 03:19:46 2014
+++ gdk/broadway/broadwayd.c	Mon Sep 29 16:56:24 2014
@@ -1,6 +1,8 @@
 #include "config.h"
 #include <string.h>
+#ifdef HAVE_SYS_MMAN_H
 #include <sys/mman.h>
+#endif
 #include <sys/stat.h>
 #include <fcntl.h>
 #include <stdlib.h>
@@ -8,7 +10,9 @@
 
 #include <glib.h>
 #include <gio/gio.h>
+#ifdef G_OS_UNIX
 #include <gio/gunixsocketaddress.h>
+#endif
 
 #include "broadway-server.h"
 
@@ -433,12 +437,14 @@
   GError *error = NULL;
   GOptionContext *context;
   GMainLoop *loop;
+  GInetAddress *inet;
   GSocketAddress *address;
   GSocketService *listener;
-  char *path, *base;
+  char *path, *basename;
   char *http_address = NULL;
   int http_port = 0;
-  int display = 1;
+  char *display;
+  int port = 0;
   const GOptionEntry entries[] = {
     { "port", 'p', 0, G_OPTION_ARG_INT, &http_port, "Httpd port", "PORT" },
     { "address", 'a', 0, G_OPTION_ARG_STRING, &http_address, "Ip address to bind to ", "ADDRESS" },
@@ -453,6 +459,7 @@
       exit (1);
     }
 
+  display = NULL;
   if (argc > 1)
     {
       if (*argv[1] != ':')
@@ -460,16 +467,49 @@
 	  g_printerr ("Usage broadwayd [:DISPLAY]\n");
 	  exit (1);
 	}
-      display = strtol(argv[1]+1, NULL, 10);
-      if (display == 0)
-	{
-	  g_printerr ("Failed to parse display num %s\n", argv[1]);
-	  exit (1);
-	}
+      display = argv[1];
+    }
+
+  if (display == NULL)
+    {
+#ifdef G_OS_UNIX
+      display = ":0";
+#else
+      display = ":tcp";
+#endif
+    }
+
+  if (g_str_has_prefix (display, ":tcp"))
+    {
+      port = strtol (display + strlen (":tcp"), NULL, 10);
+
+      inet = g_inet_address_new_from_string ("127.0.0.1");
+      g_print ("Listening on 127.0.0.1:%d\n", port + 9090);
+      address = g_inet_socket_address_new (inet, port + 9090);
+      g_object_unref (inet);
+    }
+#ifdef G_OS_UNIX
+  else if (display[0] == ':' && g_ascii_isdigit(display[1]))
+    {
+      port = strtol (display + strlen (":"), NULL, 10);
+      basename = g_strdup_printf ("broadway%d.socket", port + 1);
+      path = g_build_filename (g_get_user_runtime_dir (), basename, NULL);
+      g_free (basename);
+
+      g_print ("Listening on %s\n", path);
+      address = g_unix_socket_address_new_with_type (path, -1,
+						     G_UNIX_SOCKET_ADDRESS_ABSTRACT);
+      g_free (path);
+    }
+#endif
+  else
+    {
+      g_printerr ("Failed to parse display %s\n", display);
+      exit (1);
     }
 
   if (http_port == 0)
-    http_port = 8080 + (display - 1);
+    http_port = 8080 + port;
 
   server = broadway_server_new (http_address, http_port, &error);
   if (server == NULL)
@@ -477,14 +517,6 @@
       g_printerr ("%s\n", error->message);
       return 1;
     }
-
-  base = g_strdup_printf ("broadway%d.socket", display);
-  path = g_build_filename (g_get_user_runtime_dir (), base, NULL);
-  g_free (base);
-  g_print ("Listening on %s\n", path);
-  address = g_unix_socket_address_new_with_type (path, -1,
-						 G_UNIX_SOCKET_ADDRESS_ABSTRACT);
-  g_free (path);
 
   listener = g_socket_service_new ();
   if (!g_socket_listener_add_address (G_SOCKET_LISTENER (listener),
--- gdk/broadway/gdkbroadway-server.c	Tue Jan 28 03:19:46 2014
+++ gdk/broadway/gdkbroadway-server.c	Mon Sep 29 16:55:18 2014
@@ -1,4 +1,6 @@
+#ifdef HAVE_SYS_MMAN_H
 #include <sys/mman.h>
+#endif
 #include <sys/stat.h>
 #include <fcntl.h>
 
@@ -8,7 +10,9 @@
 
 #include <glib.h>
 #include <glib/gprintf.h>
+#ifdef G_OS_UNIX
 #include <gio/gunixsocketaddress.h>
+#endif
 #include <stdlib.h>
 #include <string.h>
 #include <errno.h>
@@ -12,11 +16,17 @@
 #include <stdlib.h>
 #include <string.h>
 #include <errno.h>
+
 #include <unistd.h>
+#ifdef G_OS_WIN32
+#include <io.h>
+#define ftruncate _chsize_s
+#endif
 #include <sys/types.h>
-#include <sys/socket.h>
-#include <netinet/in.h>
-#include <netinet/tcp.h>
+#ifdef G_OS_WIN32
+#include <windows.h>
+#endif
+
 
 typedef struct BroadwayInput BroadwayInput;
 
@@ -78,31 +88,64 @@
 }
 
 GdkBroadwayServer *
-_gdk_broadway_server_new (int port, GError **error)
+_gdk_broadway_server_new (const char *display, GError **error)
 {
   GdkBroadwayServer *server;
   char *basename;
   GSocketClient *client;
   GSocketConnection *connection;
+  GInetAddress *inet;
   GSocketAddress *address;
   GPollableInputStream *pollable;
   GInputStream *in;
   GSource *source;
   char *path;
+  char *local_socket_type = NULL;
+  int port;
+
+  if (display == NULL)
+    {
+#ifdef G_OS_UNIX
+      display = ":0";
+#else
+      display = ":tcp";
+#endif
+    }
+
+  if (g_str_has_prefix (display, ":tcp"))
+    {
+      port = 9090 + strtol (display + strlen (":tcp"), NULL, 10);
+
+      inet = g_inet_address_new_from_string ("127.0.0.1");
+      address = g_inet_socket_address_new (inet, port);
+      g_object_unref (inet);
+    }
+#ifdef G_OS_UNIX
+  else if (display[0] == ':' && g_ascii_isdigit(display[1]))
+    {
+      port = strtol (display + strlen (":"), NULL, 10);
+      basename = g_strdup_printf ("broadway%d.socket", port + 1);
+      path = g_build_filename (g_get_user_runtime_dir (), basename, NULL);
+      g_free (basename);
 
-  basename = g_strdup_printf ("broadway%d.socket", port);
-  path = g_build_filename (g_get_user_runtime_dir (), basename, NULL);
-  g_free (basename);
-
-  address = g_unix_socket_address_new_with_type (path, -1,
-						 G_UNIX_SOCKET_ADDRESS_ABSTRACT);
-  g_free (path);
+      address = g_unix_socket_address_new_with_type (path, -1,
+						     G_UNIX_SOCKET_ADDRESS_ABSTRACT);
+      g_free (path);
+    }
+#endif
+  else
+    {
+      //g_set_error (error, G_IO_ERROR, G_IO_ERROR_NOT_SUPPORTED,
+	//	   _("broadway display type not supported '%s'"), display);
+      return NULL;
+    }
+
+  g_free (local_socket_type);
 
   client = g_socket_client_new ();
 
-  error = NULL;
   connection = g_socket_client_connect (client, G_SOCKET_CONNECTABLE (address), NULL, error);
-  
+
   g_object_unref (address);
   g_object_unref (client);
 
@@ -501,6 +544,85 @@
   return TRUE;
 }
 
+static void *
+map_named_shm (char *name, gsize size)
+{
+#ifdef G_OS_UNIX
+
+  int fd;
+  void *ptr;
+  int res;
+
+  fd = shm_open(name, O_RDWR|O_CREAT|O_EXCL, 0600);
+  if (fd == -1)
+    {
+      if (errno != EEXIST)
+	g_error ("Unable to allocate shared mem for window");
+      return NULL;
+    }
+
+  res = ftruncate (fd, size);
+  g_assert (res != -1);
+
+  res = posix_fallocate (fd, 0, size);
+  if (res != 0)
+    {
+      shm_unlink (name);
+      g_error ("Not enough shared memory for window surface");
+    }
+  
+  ptr = mmap(0, size, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);
+
+  (void) close(fd);
+
+  return ptr;
+
+#elif defined(G_OS_WIN32)
+
+  int fd;
+  void *ptr;
+  char *shmpath;
+  void *map = ((void *)-1);
+  int res;
+
+  if (*name == '/')
+    ++name;
+  shmpath = g_build_filename (g_get_tmp_dir (), name, NULL);
+
+  fd = open(shmpath, O_RDWR|O_CREAT|O_EXCL, 0600);
+  g_free (shmpath);
+  if (fd == -1)
+    {
+      if (errno != EEXIST)
+	g_error ("Unable to allocate shared mem for window");
+      return NULL;
+    }
+
+  res = ftruncate (fd, size);
+  g_assert (res != -1);
+  
+  if (size == 0)
+    ptr = map;
+  else
+    {
+      HANDLE h, fm;
+      h = (HANDLE)_get_osfhandle (fd);
+      fm = CreateFileMapping (h, NULL, PAGE_READWRITE, 0, (DWORD)size, NULL);
+      ptr = MapViewOfFile (fm, FILE_MAP_WRITE, 0, 0, (size_t)size);
+      CloseHandle (fm);
+    }
+
+  (void) close(fd);
+
+  return ptr;
+
+#else
+#error "No shm mapping supported"
+
+  return NULL;
+#endif
+}
+
 static char
 make_valid_fs_char (char c)
 {
@@ -510,11 +632,12 @@
 }
 
 /* name must have at least space for 34 bytes */
-static int
-create_random_shm (char *name)
+static gpointer
+create_random_shm (char *name, gsize size)
 {
   guint32 r;
-  int i, o, fd;
+  int i, o;
+  gpointer ptr;
 
   while (TRUE)
     {
@@ -533,18 +656,11 @@
 	  name[o++] = make_valid_fs_char ((r >> 24) & 0xff);
 	}
       name[o++] = 0;
-  
-      fd = shm_open(name, O_RDWR|O_CREAT|O_EXCL, 0600);
-      if (fd >= 0)
-	return fd;
 
-      if (errno != EEXIST)
-	{
-	  g_printerr ("Unable to allocate shared mem for window");
-	  exit (1);
-	}
+      ptr = map_named_shm (name, size);
+      if (ptr)
+	return ptr;
     }
-
 }
 
 static const cairo_user_data_key_t gdk_broadway_shm_cairo_key;
@@ -560,8 +676,26 @@
 {
   BroadwayShmSurfaceData *data = _data;
 
+#ifdef G_OS_UNIX
+
   munmap (data->data, data->data_size);
   shm_unlink (data->name);
+
+#elif defined(G_OS_WIN32)
+
+  char *name = data->name;
+  char *shmpath;
+
+  if (*name == '/')
+    ++name;
+
+  shmpath = g_build_filename (g_get_tmp_dir (), name, NULL);
+  UnmapViewOfFile (data->data);
+  remove (shmpath);
+  g_free (shmpath);
+
+#endif
+
   g_free (data);
 }
 
@@ -571,26 +705,10 @@
 {
   BroadwayShmSurfaceData *data;
   cairo_surface_t *surface;
-  int res;
-  int fd;
 
   data = g_new (BroadwayShmSurfaceData, 1);
   data->data_size = width * height * sizeof (guint32);
-  
-  fd = create_random_shm (data->name);
-
-  res = ftruncate (fd, data->data_size);
-  g_assert (res != -1);
-
-  res = posix_fallocate (fd, 0, data->data_size);
-  if (res != 0)
-    {
-      shm_unlink (data->name);
-      g_error ("Not enough shared memory for window surface");
-    }
-
-  data->data = mmap(0, data->data_size, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0); 
-  (void) close(fd);
+  data->data = create_random_shm (data->name, data->data_size);
 
   surface = cairo_image_surface_create_for_data ((guchar *)data->data,
 						 CAIRO_FORMAT_RGB24, width, height, width * sizeof (guint32));
--- gdk/broadway/gdkbroadway-server.h	Tue Jan 28 03:19:46 2014
+++ gdk/broadway/gdkbroadway-server.h	Mon Sep 29 16:51:15 2014
@@ -14,7 +14,7 @@
 #define GDK_IS_BROADWAY_SERVER_CLASS(klass)   (G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_BROADWAY_SERVER))
 #define GDK_BROADWAY_SERVER_GET_CLASS(obj)    (G_TYPE_INSTANCE_GET_CLASS ((obj), GDK_TYPE_BROADWAY_SERVER, GdkBroadwayServerClass))
 
-GdkBroadwayServer *_gdk_broadway_server_new                      (int                 port,
+GdkBroadwayServer *_gdk_broadway_server_new                      (const char         *display,
 								  GError            **error);
 void               _gdk_broadway_server_flush                    (GdkBroadwayServer  *server);
 void               _gdk_broadway_server_sync                     (GdkBroadwayServer  *server);
--- gdk/broadway/gdkdisplay-broadway.c	Tue Jan 28 03:19:46 2014
+++ gdk/broadway/gdkdisplay-broadway.c	Mon Sep 29 16:50:42 2014
@@ -39,9 +39,6 @@
 #include <errno.h>
 #include <unistd.h>
 #include <sys/types.h>
-#include <sys/socket.h>
-#include <netinet/in.h>
-#include <netinet/tcp.h>
 
 static void   gdk_broadway_display_dispose            (GObject            *object);
 static void   gdk_broadway_display_finalize           (GObject            *object);
@@ -126,7 +123,7 @@
 {
   GdkDisplay *display;
   GdkBroadwayDisplay *broadway_display;
-  int port;
+  GError *error = NULL;
 
   display = g_object_new (GDK_TYPE_BROADWAY_DISPLAY, NULL);
   broadway_display = GDK_BROADWAY_DISPLAY (display);
@@ -155,25 +152,15 @@
   if (display_name == NULL)
     display_name = g_getenv ("BROADWAY_DISPLAY");
 
-  port = 0;
-  if (display_name != NULL)
-    {
-      if (*display_name == ':')
-	display_name++;
-      port = strtol(display_name, NULL, 10);
-    }
-  if (port == 0)
-    port = 1;
-
-  broadway_display->server = _gdk_broadway_server_new (port, NULL);
+  broadway_display->server = _gdk_broadway_server_new (display_name, &error);
   if (broadway_display->server == NULL)
     {
-      g_printerr ("Unable to init server\n");
+      g_printerr ("Unable to init server: %s\n", error->message);
+      g_error_free (error);
       return NULL;
     }
 
   g_signal_emit_by_name (display, "opened");
-  g_signal_emit_by_name (gdk_display_manager_get (), "display-opened", display);
 
   return display;
 }
--- gdk/broadway/gdkwindow-broadway.c	Tue Jan 28 03:19:46 2014
+++ gdk/broadway/gdkwindow-broadway.c	Mon Sep 29 16:43:13 2014
@@ -39,8 +39,6 @@
 #include <stdlib.h>
 #include <stdio.h>
 #include <string.h>
-#include <netinet/in.h>
-#include <unistd.h>
 
 /* Forward declarations */
 static void     gdk_window_broadway_set_background     (GdkWindow      *window,
--- gdk/broadway/Makefile.in	Tue Jan 28 03:20:43 2014
+++ gdk/broadway/Makefile.in	Mon Sep 29 16:58:29 2014
@@ -577,7 +577,7 @@
 	broadway-output.h		\
 	broadway-output.c
 
-broadwayd_LDADD = $(GDK_DEP_LIBS) -lrt -lcrypt
+broadwayd_LDADD = $(GDK_DEP_LIBS) -lws2_32
 MAINTAINERCLEANFILES = $(broadway_built_sources)
 BUILT_SOURCES = $(broadway_built_sources)
 all: $(BUILT_SOURCES)
--- gdk/win32/gdkdevice-win32.c	Mon Jan 27 23:54:56 2014
+++ gdk/win32/gdkdevice-win32.c	Sun Oct 05 07:43:05 2014
@@ -119,7 +119,7 @@
 {
   gint x_int, y_int;
 
-  gdk_window_get_pointer (window, &x_int, &y_int, mask);
+  gdk_window_get_device_position (window, device, &x_int, &y_int, mask);
 
   if (axes)
     {
--- gdk/win32/gdkdisplay-win32.c	Mon Jan 27 23:54:56 2014
+++ gdk/win32/gdkdisplay-win32.c	Sun Oct 05 07:36:26 2014
@@ -206,7 +206,7 @@
   _gdk_screen = g_object_new (GDK_TYPE_WIN32_SCREEN, NULL);
 
   _gdk_monitor_init ();
-  _gdk_visual_init ();
+  _gdk_visual_init (_gdk_screen);
   _gdk_windowing_window_init (_gdk_screen);
   _gdk_events_init ();
   _gdk_input_init (_gdk_display);
@@ -215,8 +215,7 @@
   /* Precalculate display name */
   (void) gdk_display_get_name (_gdk_display);
 
-  g_signal_emit_by_name (gdk_display_manager_get (),
-			 "display_opened", _gdk_display);
+  g_signal_emit_by_name (_gdk_display, "opened");
 
   GDK_NOTE (MISC, g_print ("... _gdk_display now set up\n"));
 
@@ -709,4 +708,6 @@
   display_class->convert_selection = _gdk_win32_display_convert_selection;
   display_class->text_property_to_utf8_list = _gdk_win32_display_text_property_to_utf8_list;
   display_class->utf8_to_string_target = _gdk_win32_display_utf8_to_string_target;
+  
+  _gdk_win32_windowing_init ();
 }
--- gdk/win32/gdkdnd-win32.c	Mon Jan 27 23:54:56 2014
+++ gdk/win32/gdkdnd-win32.c	Wed May 14 14:13:46 2014
@@ -68,7 +68,11 @@
  *
  */
  
+/* The mingw.org compiler does not export GUIDS in it's import library. To work
+ * around that, define INITGUID to have the GUIDS declared. */
+#if defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR)
 #define INITGUID
+#endif
 
 #include "gdkdnd.h"
 #include "gdkproperty.h"
--- gdk/win32/gdkevents-win32.c	Tue Jan 28 03:19:46 2014
+++ gdk/win32/gdkevents-win32.c	Sun Oct 05 07:37:02 2014
@@ -2713,17 +2713,13 @@
       /* Break grabs on unmap or minimize */
       if (windowpos->flags & SWP_HIDEWINDOW || 
 	  ((windowpos->flags & SWP_STATECHANGED) && IsIconic (msg->hwnd)))
-	{
-	  if (pointer_grab != NULL)
-	    {
-	      if (pointer_grab->window == window)
-		gdk_pointer_ungrab (msg->time);
-	    }
+      {
+        GdkDevice *device = gdk_device_manager_get_client_pointer (device_manager);
 
-	  if (keyboard_grab != NULL &&
-	      keyboard_grab->window == window)
-	    gdk_keyboard_ungrab (msg->time);
-	}
+        if ((pointer_grab != NULL && pointer_grab->window == window) ||
+            (keyboard_grab != NULL && keyboard_grab->window == window))
+          gdk_device_ungrab (device, msg -> time);
+    }
 
       /* Send MAP events  */
       if ((windowpos->flags & SWP_SHOWWINDOW) &&
@@ -3078,6 +3074,30 @@
 	  mmi->ptMaxTrackSize.x = maxw > 0 && maxw < G_MAXSHORT ? maxw : G_MAXSHORT;
 	  mmi->ptMaxTrackSize.y = maxh > 0 && maxh < G_MAXSHORT ? maxh : G_MAXSHORT;
 	}
+      else
+	{
+	  HMONITOR winmon;
+	  MONITORINFO moninfo;
+
+	  winmon = MonitorFromWindow (GDK_WINDOW_HWND (window), MONITOR_DEFAULTTONEAREST);
+
+	  moninfo.cbSize = sizeof (moninfo);
+
+	  if (GetMonitorInfoA (winmon, &moninfo))
+	    {
+	      mmi->ptMaxTrackSize.x = moninfo.rcWork.right - moninfo.rcWork.left;
+	      mmi->ptMaxTrackSize.y = moninfo.rcWork.bottom - moninfo.rcWork.top;
+	    }
+	  else
+	    {
+	      /* Apparently, this is just a very big number (bigger than any widget
+               * could realistically be) to make sure the window is as big as
+               * possible when maximized.
+               */
+	      mmi->ptMaxTrackSize.x = 30000;
+	      mmi->ptMaxTrackSize.y = 30000;
+	    }
+	}
 
       if (impl->hint_flags & (GDK_HINT_MIN_SIZE | GDK_HINT_MAX_SIZE))
 	{
@@ -3090,8 +3110,7 @@
 				     mmi->ptMaxSize.x, mmi->ptMaxSize.y));
 	  return_val = TRUE;
 	}
-      mmi->ptMaxTrackSize.x = 30000;
-      mmi->ptMaxTrackSize.y = 30000;
+
       return_val = TRUE;
       break;
 
@@ -3115,15 +3134,12 @@
       break;
 
     case WM_NCDESTROY:
-      if (pointer_grab != NULL)
-	{
-	  if (pointer_grab->window == window)
-	    gdk_pointer_ungrab (msg->time);
-	}
-
-      if (keyboard_grab &&
-          keyboard_grab->window == window)
-	gdk_keyboard_ungrab (msg->time);
+      if ((pointer_grab != NULL && pointer_grab -> window == window) ||
+          (keyboard_grab && keyboard_grab -> window == window))
+      {
+        GdkDevice *device = gdk_device_manager_get_client_pointer (device_manager);
+        gdk_device_ungrab (device, msg -> time);
+      }
 
       if ((window != NULL) && (msg->hwnd != GetDesktopWindow ()))
 	gdk_window_destroy_notify (window);
--- gdk/win32/gdkkeys-win32.c	Mon Jan 27 23:54:56 2014
+++ gdk/win32/gdkkeys-win32.c	Wed May 14 14:14:46 2014
@@ -21,6 +21,8 @@
  * files for a list of changes.  These files are distributed with
  * GTK+ at ftp://ftp.gtk.org/pub/gtk/.
  */
+#include "config.h"
+
 #include <ctype.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -36,8 +38,6 @@
 #include "gdkkeysprivate.h"
 #include "gdkwin32keys.h"
 
-#include "config.h"
-
 struct _GdkWin32KeymapClass
 {
   GdkKeymapClass parent_class;
@@ -145,6 +145,8 @@
     case VK_SELECT:
       *ksymp = GDK_KEY_Select; break;
     case VK_PRINT:
+      *ksymp = GDK_KEY_Print; break;
+    case VK_SNAPSHOT:
       *ksymp = GDK_KEY_Print; break;
     case VK_EXECUTE:
       *ksymp = GDK_KEY_Execute; break;
--- gdk/win32/gdkprivate-win32.h	Mon Jan 27 23:54:56 2014
+++ gdk/win32/gdkprivate-win32.h	Wed May 14 15:31:20 2014
@@ -502,7 +502,7 @@
 void _gdk_windowing_window_init (GdkScreen *screen);
 void _gdk_root_window_size_init (void);
 void _gdk_monitor_init(void);
-void _gdk_visual_init (void);
+void _gdk_visual_init (GdkScreen *screen);
 void _gdk_dnd_init    (void);
 void _gdk_events_init (void);
 void _gdk_input_init  (GdkDisplay *display);
--- gdk/win32/gdkproperty-win32.c	Tue Jan 28 03:19:46 2014
+++ gdk/win32/gdkproperty-win32.c	Sun Oct 05 07:33:19 2014
@@ -186,6 +186,12 @@
       format == 8 &&
       mode == GDK_PROP_MODE_REPLACE)
     {
+      if (type == _image_bmp && nelements < sizeof (BITMAPFILEHEADER))
+        {
+           g_warning ("Clipboard contains invalid bitmap data");
+           return;
+        }
+
       if (type == _utf8_string)
 	{
 	  if (!OpenClipboard (GDK_WINDOW_HWND (window)))
--- gdk/win32/gdkselection-win32.c	Mon Jan 27 23:54:56 2014
+++ gdk/win32/gdkselection-win32.c	Sun Oct 05 07:33:35 2014
@@ -530,21 +530,20 @@
 
       if ((hdata = GetClipboardData (CF_UNICODETEXT)) != NULL)
 	{
-	  wchar_t *ptr, *wcs, *p, *q;
+	  wchar_t *ptr, *p, *q;
 	  guchar *data;
 	  glong length, wclen;
 
 	  if ((ptr = GlobalLock (hdata)) != NULL)
 	    {
 	      length = GlobalSize (hdata);
-	      
+
 	      GDK_NOTE (DND, g_print ("... CF_UNICODETEXT: %ld bytes\n",
 				      length));
 
 	      /* Strip out \r */
-	      wcs = g_new (wchar_t, length / 2 + 1);
 	      p = ptr;
-	      q = wcs;
+	      q = ptr;
 	      wclen = 0;
 	      while (p < ptr + length / 2)
 		{
@@ -556,8 +555,7 @@
 		  p++;
 		}
 
-	      data = g_utf16_to_utf8 (wcs, wclen, NULL, NULL, NULL);
-	      g_free (wcs);
+	      data = g_utf16_to_utf8 (ptr, wclen, NULL, NULL, NULL);
 
 	      if (data)
 		selection_property_store (requestor, _utf8_string, 8,
@@ -1287,6 +1285,8 @@
 
   if (target == _image_bmp)
     {
+      g_return_val_if_fail (GlobalSize (hdata) >= sizeof (BITMAPFILEHEADER), NULL);
+
       /* No conversion is needed, just strip the BITMAPFILEHEADER */
       HGLOBAL hdatanew;
       SIZE_T size = GlobalSize (hdata) - sizeof (BITMAPFILEHEADER);
--- gdk/win32/gdkvisual-win32.c	Mon Jan 27 23:54:56 2014
+++ gdk/win32/gdkvisual-win32.c	Sun Oct 05 07:37:14 2014
@@ -42,7 +42,7 @@
 static GdkVisualType available_types[1];
 
 void
-_gdk_visual_init (void)
+_gdk_visual_init (GdkScreen *screen)
 {
   struct
   {
@@ -61,7 +61,7 @@
   gint map_entries = 0;
 
   system_visual = g_object_new (GDK_TYPE_VISUAL, NULL);
-  system_visual->screen = gdk_screen_get_default();
+  system_visual->screen = screen;
 
   if (rastercaps & RC_PALETTE)
     {
--- gdk/Makefile.in	Tue Jan 28 03:20:43 2014
+++ gdk/Makefile.in	Sat May 24 19:36:10 2014
@@ -95,11 +95,12 @@
 @USE_WIN32_FALSE@	$(am__append_1) $(am__append_2) \
 @USE_WIN32_FALSE@	$(am__append_4) $(am__append_6) \
 @USE_WIN32_FALSE@	$(am__append_7)
-@USE_WIN32_TRUE@am__append_5 = -Wl,win32/rc/gdk-win32-res.o -export-symbols $(srcdir)/gdk.def
+@USE_WIN32_TRUE@am__append_5 = -Wl,win32/rc/gdk-win32-res.o
 @USE_BROADWAY_TRUE@am__append_6 = broadway/libgdk-broadway.la
 @USE_WAYLAND_TRUE@am__append_7 = wayland/libgdk-wayland.la
 @HAVE_INTROSPECTION_TRUE@am__append_8 = Gdk-3.0.gir
 @HAVE_INTROSPECTION_TRUE@@USE_X11_TRUE@am__append_9 = GdkX11-3.0.gir
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@am__append_9 = GdkWin32-3.0.gir
 @HAVE_INTROSPECTION_TRUE@am__append_10 = $(gir_DATA) $(typelibs_DATA)
 subdir = gdk
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -906,7 +907,7 @@
 libgdk_3_la_LIBADD = $(GDK_DEP_LIBS) $(am__append_1) $(am__append_2) \
 	$(am__append_4) $(am__append_6) $(am__append_7)
 libgdk_3_la_LDFLAGS = $(LDADD) $(am__append_5)
-@USE_WIN32_TRUE@libgdk_3_la_DEPENDENCIES = win32/libgdk-win32.la win32/rc/gdk-win32-res.o gdk.def
+@USE_WIN32_TRUE@libgdk_3_la_DEPENDENCIES = win32/libgdk-win32.la win32/rc/gdk-win32-res.o
 @HAVE_INTROSPECTION_TRUE@introspection_files = \
 @HAVE_INTROSPECTION_TRUE@	$(filter-out gdkkeysyms-compat.h, $(gdk_public_h_sources))	\
 @HAVE_INTROSPECTION_TRUE@	$(gdk_c_sources)	\
@@ -919,7 +920,8 @@
 @HAVE_INTROSPECTION_TRUE@Gdk_3_0_gir_INCLUDES = Gio-2.0 GdkPixbuf-2.0 Pango-1.0 cairo-1.0
 @HAVE_INTROSPECTION_TRUE@Gdk_3_0_gir_LIBS = libgdk-3.la
 @HAVE_INTROSPECTION_TRUE@Gdk_3_0_gir_FILES = $(introspection_files)
-@HAVE_INTROSPECTION_TRUE@Gdk_3_0_gir_CFLAGS = $(AM_CPPFLAGS)
+@HAVE_INTROSPECTION_TRUE@Gdk_3_0_gir_CFLAGS = $(AM_CPPFLAGS) \
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@ -I$(srcdir)/win32 -I$(srcdir)
 @HAVE_INTROSPECTION_TRUE@Gdk_3_0_gir_EXPORT_PACKAGES = gdk-3.0
 @HAVE_INTROSPECTION_TRUE@@USE_X11_TRUE@x11_introspection_files = \
 @HAVE_INTROSPECTION_TRUE@@USE_X11_TRUE@	x11/gdkapplaunchcontext-x11.c	\
@@ -966,7 +968,48 @@
 @HAVE_INTROSPECTION_TRUE@@USE_X11_TRUE@GdkX11_3_0_gir_LIBS = libgdk-3.la
 @HAVE_INTROSPECTION_TRUE@@USE_X11_TRUE@GdkX11_3_0_gir_FILES = $(x11_introspection_files)
 @HAVE_INTROSPECTION_TRUE@@USE_X11_TRUE@GdkX11_3_0_gir_CFLAGS = $(AM_CPPFLAGS) -L$(top_builddir)/gdk
-@HAVE_INTROSPECTION_TRUE@@USE_X11_TRUE@GdkX11_3_0_gir_EXPORT_PACKAGES = gdk-x11-3.0
+
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@w32_introspection_files = \
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkcursor-win32.c		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkdevicemanager-win32.c	\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkdevice-virtual.c	\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkdevice-win32.c		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkdevice-wintab.c	\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkdisplaymanager-win32.c	\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkdisplay-win32.c	\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkdnd-win32.c		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkevents-win32.c		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkgeometry-win32.c	\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkglobals-win32.c	\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkinput.c		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkkeys-win32.c		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkmain-win32.c		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkproperty-win32.c	\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkscreen-win32.c		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkselection-win32.c	\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdktestutils-win32.c	\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkvisual-win32.c		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkwin32.h		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkwin32cursor.h		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkwin32display.h		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkwin32displaymanager.h	\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkwin32dnd.h		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkwin32id.c		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkwin32keys.h		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkwin32screen.h		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkwin32window.h		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	win32/gdkwindow-win32.c
+
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@GdkWin32_3_0_gir_SCANNERFLAGS = \
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	--identifier-prefix=Gdk		\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	--c-include="gdk/gdkwin32.h"	\
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@	--include-uninstalled=$(top_builddir)/gdk/Gdk-3.0.gir
+
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@GdkWin32_3_0_gir_INCLUDES = Gio-2.0 GdkPixbuf-2.0 Pango-1.0
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@GdkWin32_3_0_gir_LIBS = libgdk-3.la
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@GdkWin32_3_0_gir_FILES = $(w32_introspection_files)
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@GdkWin32_3_0_gir_CFLAGS = $(AM_CPPFLAGS) -L$(top_builddir)/gdk -I$(srcdir)/win32 -I$(srcdir)
+
 @HAVE_INTROSPECTION_TRUE@girdir = $(datadir)/gir-1.0
 @HAVE_INTROSPECTION_TRUE@gir_DATA = $(INTROSPECTION_GIRS)
 @HAVE_INTROSPECTION_TRUE@typelibsdir = $(libdir)/girepository-1.0
@@ -1738,11 +1781,10 @@
 
 @HAVE_INTROSPECTION_TRUE@@USE_X11_TRUE@GdkX11-3.0.gir: libgdk-3.la Gdk-3.0.gir Makefile
 
-@OS_WIN32_TRUE@install-def-file: gdk.def
-@OS_WIN32_TRUE@	mkdir -p $(DESTDIR)$(libdir)
-@OS_WIN32_TRUE@	$(INSTALL) $(srcdir)/gdk.def $(DESTDIR)$(libdir)/gdk-win32-3.0.def
-@OS_WIN32_TRUE@uninstall-def-file:
-@OS_WIN32_TRUE@	-rm $(DESTDIR)$(libdir)/gdk-win32-3.0.def
+@HAVE_INTROSPECTION_TRUE@@OS_WIN32_TRUE@GdkWin32-3.0.gir: libgdk-3.la Gdk-3.0.gir Makefile
+
+@OS_WIN32_TRUE@install-def-file: 
+@OS_WIN32_TRUE@uninstall-def-file: 
 @OS_WIN32_FALSE@install-def-file:
 @OS_WIN32_FALSE@uninstall-def-file:
 
--- gtk/gtk-default.css	Mon Jan 27 23:54:56 2014
+++ gtk/gtk-default.css	Sat Apr 12 05:31:33 2014
@@ -23,12 +23,22 @@
   color: @fg_color;
   border-color: shade (@bg_color, 0.6);
   padding: 2px;
+  -GtkWindow-resize-grip-width: 0;
+  -GtkWindow-resize-grip-height: 0;
+  -GtkWindow-decoration-button-layout: 'icon:minimize,maximize,close';
 }
 
 GtkWindow, .button, .slider {
   background-color: @bg_color;
 }
 
+GtkPopover {
+  background-color: @bg_color;
+  border-color: darker(@bg_color);
+  border-width: 1px;
+  border-style: solid;
+}
+
 .expander, GtkTreeView.view.expander {
   color: #fff;
 }
@@ -38,12 +48,24 @@
   color: @text_color;
 }
 
+GtkTreeView.dnd {
+    border-color: @internal_element_color;
+    border-radius: 0;
+    border-width: 1px;
+    border-style: solid;
+}
+
 *:insensitive {
   border-color: shade (@bg_color, 0.7);
   background-color: shade (@bg_color, 0.9);
   color: shade (@bg_color, 0.7);
 }
 
+.entry.read-only {
+  border-color: shade (@bg_color, 0.7);
+  background-color: shade (@bg_color, 0.9);
+}
+
 .entry:selected {
   background-color: shade (@bg_color, 0.9);
   color: @fg_color;
@@ -258,6 +280,17 @@
   border-width: 1px;
 }
 
+.notebook tab {
+  border-style: solid;
+  border-width: 1px;
+  padding: 0;
+}
+
+.notebook .active-page {
+  color: @selected_fg_color;
+  background-color: darker (@bg_color);
+}
+
 .frame {
   border-style: inset;
   border-width: 1px;
@@ -293,6 +326,17 @@
   border-color: shade (@bg_color, 0.8);
 }
 
+.scale.slider.fine-tune:active,
+.scale.slider.fine-tune:active:hover,
+.scale.slider.fine-tune.horizontal:active,
+.scale.slider.fine-tune.horizontal:active:hover {
+  border-width: 5px;
+}
+
+.scrollbar.slider.fine-tune {
+  border-width: 5px;
+}
+
 GtkSwitch.trough:active {
   background-color: @selected_bg_color;
   color: @selected_fg_color;
@@ -728,4 +772,89 @@
                      -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.0833333)), to(transparent)),
                      -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent));
   animation: spinner 1s infinite linear;
+}
+
+/* Client side decorations */
+.titlebar {
+  text-shadow: 1px 1px lighter (@bg_color);
+  background-image: linear-gradient(to bottom, white, @bg_color);
+  border-radius: 7px 7px 0px 0px;
+}
+
+.maximized .titlebar,
+.tiled .titlebar {
+  border-radius: 0;
+}
+
+.titlebar.default-decoration {
+  border: none;
+  box-shadow: none;
+}
+
+.titlebar .title {
+  font: Bold 10;
+}
+
+.titlebar .subtitle {
+  font: 9;
+}
+
+.titlebar:backdrop {
+  text-shadow: none;
+  background-image: none;
+  background-color: @bg_color;
+}
+
+.titlebar .titlebutton {
+  icon-shadow: 0px 1px #ffff;
+  color: shade(@fg_color, 1.8);
+  background: none;
+  padding: 5px 5px 6px 5px;
+
+  border-radius: 3px;
+  border-width: 1px 1px 2px 1px;
+  border-color: transparent;
+  border-style: solid;
+  border-image: none;
+}
+
+.titlebar .titlebutton:hover {
+  background-image: linear-gradient(to bottom, @bg_color, lighter (@bg_color));
+}
+
+.titlebar .titlebutton:backdrop {
+  border-image: none;
+  background-image: none;
+}
+
+.titlebar .titlebutton:active {
+  background-image: linear-gradient(to bottom, #a7aba7, shade(@bg_color, 0.95));
+  color: @selected_fg_color;
+  icon-shadow: none;
+}
+
+.titlebar .titlebutton:backdrop {
+  background-image: none;
+  color: #a7aba7;
+  border-image: none;
+  icon-shadow: none;
+}
+
+.window-frame {
+  border-color: darker (@bg_color);
+  border-radius: 7px 7px 0 0;
+  border-width: 1px;
+  border-style: solid;
+
+  box-shadow: 0 2px 8px 3px alpha(black, 0.5);
+  margin: 10px;
+}
+
+.window-frame.tiled {
+  border-radius: 0;
+  background-color: @bg_color;
+}
+
+window-frame:backdrop {
+  box-shadow: 0 2px 5px 1px alpha(black, 0.5);
 }
--- gtk/gtk-win32-base.css	Tue Jan 28 03:19:46 2014
+++ gtk/gtk-win32-base.css	Wed May 14 08:30:20 2014
@@ -12,6 +12,14 @@
 @define-color error_fg_color rgb (166, 38, 38);
 @define-color error_bg_color rgb (237, 54, 54);
 
+@define-color app_notification_a #aeaea4;
+@define-color app_notification_b #d1d1cb;
+@define-color app_notification_c #d8d8d3;
+
+@define-color app_notification_border #949486;
+
+@define-color primary_toolbar_button_text_shadow alpha(black, 0.1);
+
 GtkWindow,
 GtkViewport {
     background-color: @bg_color;
@@ -105,10 +113,10 @@
 }
 
 .tooltip {
-    background-color: -gtk-win32-color(button, 24);
+    background-color: transparent;
+    background-image: -gtk-win32-theme-part(tooltip, 3 1);
     color: -gtk-win32-color(button, 23);
-    border-width: 1px;
-    border-style: solid;
+    border-width: 0px;
 }
 
 .tooltip * {
@@ -123,13 +131,13 @@
 /* Buttons */
 
 .button {
-    color: -gtk-win32-color(button, 18);
     background-color: transparent;
     background-image: -gtk-win32-theme-part(button, 1 1);
     border-width: 0;
     -GtkWidget-focus-line-width: 1;
     -GtkWidget-focus-padding: 3;
     -GtkButton-interior-focus: true;
+    -GtkButton-default-border: 0px;
     padding: 3px;
 }
 
@@ -143,15 +151,31 @@
 
 .button:prelight, .button:prelight:focused {
     background-image: -gtk-win32-theme-part(button, 1 2);
-    color: #000000;
+    color: @text_color;
 }
 
 .button:active, .button:active:focused, .button:active:focused:prelight {
     background-image: -gtk-win32-theme-part(button, 1 3);
+    color: @text_color;
 }
 
 /* Check buttons */
 
+/* Prevent selected check/radio buttons from getting the "selected" blue background */
+GtkCheckButton:prelight:selected,
+GtkRadioButton:prelight:selected {
+  background-color: transparent;
+}
+
+/* This is meaningless, it just enables prelight propagation to check/radio mark */
+GtkCheckButton,
+GtkRadioButton,
+GtkCheckButton:prelight,
+GtkRadioButton:prelight {
+  background-image: -gtk-gradient (linear, left top, right bottom, from(transparent), to(transparent));
+}
+
+.check:focused,
 .check {
     background-color: transparent;
     background-image: -gtk-win32-theme-part(button, 3 1);
@@ -166,10 +190,12 @@
    in a listview where all checkboxes in a row gets prelighted
    whenever the row is prelighted */
 
+GtkButton.check:focused:prelight,
 GtkButton.check:prelight {
     background-image: -gtk-win32-theme-part(button, 3 2);
 }
 
+.check:focused:active,
 .check:active {
     background-image: -gtk-win32-theme-part(button, 3 5);
 }
@@ -178,10 +204,12 @@
     background-image: -gtk-win32-theme-part(button, 3 8);
 }
 
+GtkButton.check:focused:active:prelight,
 GtkButton.check:active:prelight {
     background-image: -gtk-win32-theme-part(button, 3 6);
 }
 
+.check:focused:inconsistent,
 .check:inconsistent {
     background-image: -gtk-win32-theme-part(button, 3 9);
 }
@@ -190,10 +218,15 @@
     background-image: -gtk-win32-theme-part(button, 3 12);
 }
 
+.check:focused:inconsistent:prelight,
 .check:inconsistent:prelight {
     background-image: -gtk-win32-theme-part(button, 3 10);
 }
 
+.check:selected {
+    background-color: transparent;
+}
+
 /* Radio buttons */
 
 .radio {
@@ -234,6 +267,10 @@
     background-image: -gtk-win32-theme-part(button, 2 4, over(2 6, 0.3));
 }
 
+.radio:selected {
+    background-color: transparent;
+}
+
 /* Scrollbars */
 
 /* TODO: Win32 has different concept for upper and lower trough, we
@@ -337,6 +374,18 @@
     background-image: -gtk-win32-theme-part(scrollbar, 2 2, over (8 2));
 }
 
+.scrollbar.slider:active {
+    background-image: -gtk-win32-theme-part(scrollbar, 2 3, over (8 3));
+}
+
+.scrollbar.slider:insensitive {
+  /* There's a theme part for "disabled slider", but the only app observed
+     to have a disabled scrollbar (Notepad) does not draw its slider at all
+     when scrollbar is disabled. */
+  background-image: none;
+  background-color: transparent;
+}
+
 .scrollbar.slider.vertical {
     background-image: -gtk-win32-theme-part(scrollbar, 3 1, over (9 1));
 }
@@ -345,6 +394,15 @@
     background-image: -gtk-win32-theme-part(scrollbar, 3 2, over (9 2));
 }
 
+.scrollbar.slider.vertical:active {
+    background-image: -gtk-win32-theme-part(scrollbar, 3 3, over (9 3));
+}
+
+.scrollbar.slider.vertical:insensitive {
+  background-image: none;
+  background-color: transparent;
+}
+
 /* Entry */
 
 /* We apply the border as a border combined with the background so that
@@ -376,16 +434,22 @@
 .spinbutton .button,
 .spinbutton .button:focused {
     background-color: transparent;
-    background-image: -gtk-win32-theme-part(spin, 1 1, margins(-1 -1 0 -1));
+    background-image: -gtk-win32-theme-part(spin, 2 1, margins(0 -1 -1 -1));
     color: rgba(0, 0, 0, 0);
 }
 
-.spinbutton .button:last-child {
-    background-image: -gtk-win32-theme-part(spin, 1 1, margins(-1 -1 0 -2));
+.spinbutton .button:last-child,
+.spinbutton .button:focused:last-child {
+    background-image: -gtk-win32-theme-part(spin, 1 1, margins(-1 -1 0 -1));
 }
 
 .spinbutton .button:prelight,
 .spinbutton .button:prelight:focused {
+    background-image: -gtk-win32-theme-part(spin, 2 2, margins(0 -1 -1 -1));
+}
+
+.spinbutton .button:prelight:last-child,
+.spinbutton .button:prelight:focused:last-child {
     background-image: -gtk-win32-theme-part(spin, 1 2, margins(-1 -1 0 -1));
 }
 
@@ -393,34 +458,117 @@
 .spinbutton .button:active:prelight,
 .spinbutton .button:active:focused,
 .spinbutton .button:active:prelight:focused {
+    background-image: -gtk-win32-theme-part(spin, 2 3, margins(0 -1 -1 -1));
+}
+
+.spinbutton .button:active:last-child,
+.spinbutton .button:active:prelight:last-child,
+.spinbutton .button:active:focused:last-child,
+.spinbutton .button:active:prelight:focused:last-child {
     background-image: -gtk-win32-theme-part(spin, 1 3, margins(-1 -1 0 -1));
 }
 
 .spinbutton .button:insensitive {
-    background-image: -gtk-win32-theme-part(spin, 1 4, margins(-1 -1 0 -1));
+    background-image: -gtk-win32-theme-part(spin, 2 4, margins(0 -1 -1 -1));
 }
 
 .spinbutton .button:insensitive:last-child {
-    background-image: -gtk-win32-theme-part(spin, 1 4, margins(-1 -1 0 -2));
+    background-image: -gtk-win32-theme-part(spin, 1 4, margins(-1 -1 0 -1));
 }
 
-.spinbutton .button.bottom,
-.spinbutton .button.bottom:focused {
-    background-image: -gtk-win32-theme-part(spin, 2 1);
+
+
+.spinbutton.vertical .button,
+.spinbutton.vertical .button:focused {
+    background-color: transparent;
+    color: rgba(0, 0, 0, 0);
+    background-image: -gtk-win32-theme-part(spin, 1 1, margins(0 -1 -0 -1));
 }
 
-.spinbutton .button.bottom:prelight,
-.spinbutton .button.bottom:prelight:focused {
-    background-image: -gtk-win32-theme-part(spin, 2 2);
+.spinbutton.vertical .button:last-child,
+.spinbutton.vertical .button:focused:last-child {
+    background-image: -gtk-win32-theme-part(spin, 2 1, margins(0 -1 0 -1));
 }
 
-.spinbutton .button.bottom:active,
-.spinbutton .button.bottom:active:prelight {
-    background-image: -gtk-win32-theme-part(spin, 2 3);
+
+.spinbutton.vertical .button:prelight,
+.spinbutton.vertical .button:prelight:focused {
+    background-image: -gtk-win32-theme-part(spin, 1 2, margins(0 -1 -0 -1));
+}
+
+.spinbutton.vertical .button:prelight:last-child,
+.spinbutton.vertical .button:prelight:focused:last-child {
+    background-image: -gtk-win32-theme-part(spin, 2 2, margins(0 -1 0 -1));
+}
+
+
+.spinbutton.vertical .button:active,
+.spinbutton.vertical .button:active:prelight,
+.spinbutton.vertical .button:active:focused,
+.spinbutton.vertical .button:active:prelight:focused {
+    background-image: -gtk-win32-theme-part(spin, 1 3, margins(0 -1 -0 -1));
+}
+
+.spinbutton.vertical .button:active:last-child,
+.spinbutton.vertical .button:active:prelight:last-child,
+.spinbutton.vertical .button:active:focused:last-child,
+.spinbutton.vertical .button:active:prelight:focused:last-child {
+    background-image: -gtk-win32-theme-part(spin, 2 3, margins(0 -1 0 -1));
+}
+
+.spinbutton.vertical .button:insensitive {
+    background-image: -gtk-win32-theme-part(spin, 1 4, margins(0 -1 -0 -1));
+}
+
+.spinbutton.vertical .button:insensitive:last-child {
+    background-image: -gtk-win32-theme-part(spin, 2 4, margins(0 -1 0 -1));
+}
+
+
+
+.spinbutton .button:dir(rtl),
+.spinbutton .button:focused:dir(rtl) {
+    background-color: transparent;
+    background-image: -gtk-win32-theme-part(spin, 2 1, margins(0 -1 -1 -1));
+    color: rgba(0, 0, 0, 0);
+}
+
+.spinbutton .button:first-child:dir(rtl),
+.spinbutton .button:focused:first-child:dir(rtl) {
+    background-image: -gtk-win32-theme-part(spin, 1 1, margins(-1 -1 0 -1));
+}
+
+.spinbutton .button:prelight:dir(rtl),
+.spinbutton .button:prelight:focused:dir(rtl) {
+    background-image: -gtk-win32-theme-part(spin, 2 2, margins(0 -1 -1 -1));
+}
+
+.spinbutton .button:prelight:first-child:dir(rtl),
+.spinbutton .button:prelight:focused:first-child:dir(rtl) {
+    background-image: -gtk-win32-theme-part(spin, 1 2, margins(-1 -1 0 -1));
+}
+
+
+.spinbutton .button:active:dir(rtl),
+.spinbutton .button:active:prelight:dir(rtl),
+.spinbutton .button:active:focused:dir(rtl),
+.spinbutton .button:active:prelight:focused:dir(rtl) {
+    background-image: -gtk-win32-theme-part(spin, 2 3, margins(0 -1 -1 -1));
+}
+
+.spinbutton .button:active:first-child:dir(rtl),
+.spinbutton .button:active:prelight:first-child:dir(rtl),
+.spinbutton .button:active:focused:first-child:dir(rtl),
+.spinbutton .button:active:prelight:focused:first-child:dir(rtl) {
+    background-image: -gtk-win32-theme-part(spin, 1 3, margins(-1 -1 0 -1));
 }
 
-.spinbutton .button.bottom:insensitive {
-    background-image: -gtk-win32-theme-part(spin, 2 4);
+.spinbutton .button:insensitive:dir(rtl) {
+    background-image: -gtk-win32-theme-part(spin, 2 4, margins(0 -1 -1 -1));
+}
+
+.spinbutton .button:insensitive:first-child:dir(rtl) {
+    background-image: -gtk-win32-theme-part(spin, 1 4, margins(-1 -1 0 -1));
 }
 
 /* Ranges */
@@ -630,6 +778,13 @@
     border-width: 0;
     background-image: -gtk-win32-theme-part(combobox, 1 1);
     color: rgba(0, 0, 0, 0);
+/* Remove padding from combobox button (GtkArrow inside of it is hardcoded to be
+   16x16, but we draw even smaller arrow instead, so padding is completely unnecessary,
+   it only makes the button bigger for not good reason).
+   Only do this for combobox-entry, because non-entry combobox IS the button,
+   and it does need to be as thick as the items of the list it pops up (and it's
+   still slimmer than padded combobox-entry!). */
+    padding: 0px;
 }
 
 GtkComboBox.combobox-entry .button:prelight,
@@ -647,6 +802,11 @@
     background-image: -gtk-win32-theme-part(combobox, 1 4);
 }
 
+/* Dropdown list should have "window" color, as listbox contents do (usually it's "white") */
+GtkComboBox GtkCellLayout * {
+    background-color: -gtk-win32-color(listview, 5);
+}
+
 GtkComboBox .separator {
     /* always disable separators */
     -GtkWidget-wide-separators: true;
@@ -654,49 +814,41 @@
     -GtkWidget-vertical-separator: 0;
 }
 
-/* Notebook */
-
-.notebook {
-    background-color: #ffffff;
-    border-width: 1px 1px 1px 1px;
-    border-style: solid;
-    background-origin: padding-box;
-    background-clip: border-box;
-    background-image: -gtk-win32-theme-part(tab, 9 1, margins(-1 -3 -2 -1));
-    border-image: -gtk-win32-theme-part(tab, 9 1, margins(0 -2 -1 0)) 1 1 1 1 repeat;
-    -GtkNotebook-tab-overlap: 1;
-    -GtkNotebook-tab-curvature: 0;
-}
-
-.notebook tab {
-    border-width: 0;
-    background-image: -gtk-win32-theme-part(tab, 1 1);
-    padding: 0px 4px 0px 4px;
-}
-
-.notebook tab.left, .notebook tab.right {
-    padding: 4px 0px 4px 0px;
+/* Draw "arrow" for non-entry comboboxes. Select the box, since selecting
+   the arrow itself does not seem to work as intended. */
+GtkComboBox GtkBox {
+    color: rgba(255, 0, 0, 0);
+    background-image: -gtk-win32-theme-part(combobox, 6 1);
+}
+GtkComboBox GtkBox:insensitive {
+    color: rgba(255, 0, 0, 0);
+    background-image: -gtk-win32-theme-part(combobox, 6 4);
+}
+/* Make sure the style above does not touch comboboxes with entries by
+   disabling background image for the box again */
+GtkComboBox.combobox-entry GtkBox {
+    color: rgba(255, 0, 0, 0);
+    background-image: none;
 }
-
-.notebook tab:active {
-    background-image: -gtk-win32-theme-part(tab, 1 3, margins(0 0 -1 0));
+GtkComboBox.combobox-entry GtkBox:insensitive {
+    color: rgba(255, 0, 0, 0);
+    background-image: none;
 }
-.notebook tab:active.top {
-    padding: 2px 4px 1px 4px;
+GtkComboBox.combobox-entry GtkArrow {
+    color: rgba(255, 0, 0, 0);
 }
-
-.notebook tab:active.bottom {
-    padding: 1px 4px 2px 4px;
+GtkComboBox.combobox-entry GtkArrow:insensitive {
+    color: rgba(255, 0, 0, 0);
 }
+/* The arrow is part of the background image drawn by the theme, don't draw GTK's own arrow 
 
-.notebook tab:active.right {
-    padding: 4px 4px 4px 1px;
+GtkComboBox GtkArrow {
+    color: rgba(255, 0, 0, 0);
 }
-
-.notebook tab:active.left {
-    padding: 4px 1px 4px 4px;
+GtkComboBox GtkArrow:insensitive {
+    color: rgba(255, 0, 0, 0);
 }
-
+*/
 /* Toolbar */
 
 .toolbar {
@@ -751,7 +903,7 @@
 
 GtkSwitch {
     font: bold condensed 10;
-    color: -gtk-win32-color(button, 18);
+    color: @text_color;
 }
 
 GtkSwitch.slider {
@@ -795,6 +947,17 @@
     padding: 3px 5px;
 }
 
+/* Add more padding to menus, increasing visible height of each menuitem */
+.menu * {
+  padding: 2px;
+}
+
+/* Make arrows a bit smaller to fit better into W32 theme
+   FIXME: they still have the wrong style though - angle instead of a filled triangle */
+GtkMenuItem {
+    -GtkMenuItem-arrow-scaling: 0.5;
+}
+
 /* Assistant */
 
 GtkAssistant .sidebar .highlight {
@@ -833,14 +996,10 @@
     background-image: none;
 }
 
-/*
- This doesn't quite look right with no background (i.e. when not on a statusbar
-
 .grip {
     background-color: transparent;
     background-image:  -gtk-win32-theme-part(status, 3 1);
 }
-*/
 
 @keyframes spinner {
    0% { background-image: none,
@@ -1191,4 +1350,153 @@
                      -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.0833333)), to(transparent)),
                      -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent));
   animation: spinner 1s infinite linear;
+}
+
+/* Popovers */
+GtkPopover {
+    border-radius: 3px;
+    background-clip: border-box;
+    background-color: @bg_color;
+
+    border-color: rgba(0, 0, 0, 1);
+    border-width: 1px;
+    border-style: solid;
+
+    box-shadow: 0 2px 3px alpha(black, 0.5);
+    margin: 10px;
+    padding: 2px;
+}
+GtkPopover > .list,
+GtkPopover > .view,
+GtkPopover > .toolbar {
+    background-color: transparent;
+}
+
+/* Listbox */
+.list {
+  background-color: -gtk-win32-color(listbox, 5);
+}
+
+/* Dim label */
+.dim-label {
+    color: alpha(currentColor, 0.55);
+    text-shadow: none;
+}
+
+/* Modelbuttons */
+.button.menuitem:focused,
+.button.menuitem {
+    background-color: transparent;
+    background-image: -gtk-win32-theme-part(menu, 14 1);
+}
+
+.button.menuitem:active,
+.button.menuitem:active:focused {
+    background-color: transparent;
+    background-image: -gtk-win32-theme-part(menu, 14 1);
+}
+
+.button.menuitem:active:prelight:focused,
+.button.menuitem:prelight:focused,
+.button.menuitem:prelight {
+    background-image: -gtk-win32-theme-part(menu, 14 2);
+}
+
+.button.menuitem:active:prelight:insensitive:focused,
+.button.menuitem:prelight:insensitive:focused,
+.button.menuitem:prelight:insensitive {
+    background-image: -gtk-win32-theme-part(menu, 14 4);
+}
+
+
+.button.menuitem.radio:focused,
+.button.menuitem.radio,
+.button.menuitem.radio:prelight,
+.button.menuitem.radio:insensitive {
+    background-color: transparent;
+    background-image: none;
+    border-width: 0;
+}
+
+.button.menuitem.radio:active:focused,
+.button.menuitem.radio:active,
+.button.menuitem.radio:active:prelight {
+    background-image: -gtk-win32-theme-part(menu, 12 2, over (11 3));
+    border-width: 0;
+}
+
+.button.menuitem.radio:inconsistent:focused,
+.button.menuitem.radio:inconsistent,
+.button.menuitem.radio:inconsistent:insensitive,
+.button.menuitem.radio:inconsistent:prelight,
+.button.menuitem.radio:inconsistent:active,
+.button.menuitem.radio:inconsistent:active:prelight {
+    background-image: none; /* Fall back to default, this state is not in win32 */
+    border-width: 0;
+}
+
+.button.menuitem.radio:insensitive:active:focused,
+.button.menuitem.radio:insensitive:active,
+.button.menuitem.radio:insensitive:active:prelight {
+    background-image: -gtk-win32-theme-part(menu, 12 1, over (11 4));
+    border-width: 0;
+}
+
+.button.menuitem.check:focused,
+.button.menuitem.check,
+.button.menuitem.check:insensitive,
+.button.menuitem.check:prelight,
+.button.menuitem.check:prelight:focused {
+    background-color: transparent;
+    background-image: none;
+    border-width: 0;
+}
+
+
+.button.menuitem.check:active:focused, 
+.button.menuitem.check:active, 
+.button.menuitem.check:active:prelight:focused,
+.button.menuitem.check:active:prelight {
+    background-image: -gtk-win32-theme-part(menu, 12 2, over (11 1));
+    border-width: 0;
+}
+
+.button.menuitem.check:inconsistent:focused,
+.button.menuitem.check:inconsistent,
+.button.menuitem.check:inconsistent:insensitive,
+.button.menuitem.check:inconsistent:insensitive:focused,
+.button.menuitem.check:inconsistent:prelight,
+.button.menuitem.check:inconsistent:prelight:focused,
+.button.menuitem.check:inconsistent:active,
+.button.menuitem.check:inconsistent:active:focused,
+.button.menuitem.check:inconsistent:active:prelight:focused,
+.button.menuitem.check:inconsistent:active:prelight {
+    background-image: none; /* Fall back to default, this state is not in win32 */
+    border-width: 0;
+}
+
+.button.menuitem.check:insensitive:active:focused,
+.button.menuitem.check:insensitive:active,
+.button.menuitem.check:insensitive:active:prelight:focused,
+.button.menuitem.check:insensitive:active:prelight {
+    background-image: -gtk-win32-theme-part(menu, 12 1, over (11 2));
+    border-width: 0;
+}
+
+/* Application notification */
+.app-notification {
+    border-style: solid;
+    border-color: @app_notification_border;
+    border-width: 0 1px 1px 1px;
+    border-radius: 0 0 5px 5px;
+    padding: 8px;
+
+    background-image: linear-gradient(to bottom,
+                                      @app_notification_a,
+                                      @app_notification_b 18%,
+                                      @app_notification_c);
+
+    color: @theme_text_color;
+    text-shadow: 0 1px @primary_toolbar_button_text_shadow;
+    border-image: none;
 }
--- gtk/gtk-win32-xp.css	Mon Jan 27 23:54:56 2014
+++ gtk/gtk-win32-xp.css	Wed Apr 16 09:24:08 2014
@@ -1,8 +1,25 @@
 @import url("gtk-win32-base.css");
 
+/* Override non-entry combobox arrow parts from the base theme,
+   since XP draws an empty white rectangle for parts 6 1 and 6 4.
+   Draw parts 1 1 and 1 4 instead */
+GtkComboBox GtkBox {
+    background-image: -gtk-win32-theme-part(combobox, 1 1, margins (1 0 1 0));
+}
+GtkComboBox GtkBox:insensitive {
+    background-image: -gtk-win32-theme-part(combobox, 1 4, margins (1 0 1 0));
+}
+
+.menu*:prelight {
+    color: @selected_fg_color;
+}
+
+.menuitem*:prelight {
+    color: @selected_fg_color;
+}
+
 .menubar {
-    background-color: #f7f7f7;
-    /*background-color: -gtk-win32-color(button, 30);*/
+    background-color: -gtk-win32-color(button, 30);
 
     border-width: 0 0 1px 0;
     border-style: solid;
@@ -15,7 +32,7 @@
 
 .menubar > .menuitem:prelight,
 .menubar > .menuitem:prelight:focused {
-    background-image: -gtk-win32-theme-part(toolbar, 1 2);
+    background-color: -gtk-win32-color(button, 29);
 }
 
 .notebook {
@@ -70,3 +87,85 @@
     border-style: solid;
     border-color: transparent;
 }
+
+/* Notebook */
+
+.notebook {
+    background-color: #ffffff;
+    border-width: 1px 1px 1px 1px;
+    border-style: solid;
+    background-origin: padding-box;
+    background-clip: border-box;
+    background-image: -gtk-win32-theme-part(tab, 9 1, margins(-1 -3 -2 -1));
+    border-image: -gtk-win32-theme-part(tab, 9 1, margins(0 -2 -1 0)) 1 1 1 1 repeat;
+    -GtkNotebook-tab-overlap: 1;
+    -GtkNotebook-tab-curvature: 0;
+}
+
+.notebook tab {
+    border-width: 0;
+    background-image: -gtk-win32-theme-part(tab, 1 1);
+    padding: 0px 4px 0px 4px;
+}
+
+.notebook tab.left, .notebook tab.right {
+    padding: 4px 0px 4px 0px;
+}
+
+.notebook tab:active {
+    background-image: -gtk-win32-theme-part(tab, 1 3, margins(0 0 -1 0));
+}
+.notebook tab:active.top {
+    padding: 2px 4px 1px 4px;
+}
+
+.notebook tab:active.bottom {
+    padding: 1px 4px 2px 4px;
+}
+
+.notebook tab:active.right {
+    padding: 4px 4px 4px 1px;
+}
+
+.notebook tab:active.left {
+    padding: 4px 1px 4px 4px;
+}
+
+/* Listbox */
+
+/* This is roughly similar to what Vista+ theme draws. The reason for using
+this instead of changing background-color to @selection_bg_color is that
+blanket "* { color: @text_color; }" style overrides ".list-row:selected {
+color: @selected_fg_color; }", causing labels and widgets in list rows to have
+black (not white) text over blue background. Fixing that requires overhauling
+the whole theme to put narrow "color: @text_color" style everywhere, to be
+able to remove the blanket style.
+And the reason for not using appropriate W32 theme part is that the appropriate
+W32 theme part does not exist in XP theme. */
+.list-row:prelight {
+    background-image: -gtk-gradient (linear,
+               0 0, 0 1,
+               color-stop(0, rgb(253, 254, 255)),
+               color-stop(1, rgb(237, 245, 255)));
+    box-shadow: inset -1px -1px 0px rgba (128, 128, 255, 0.5), inset 1px 1px 0px rgba (128, 128, 255, 0.5);
+}
+
+.list-row:selected {
+  /* Override *:selected {} blanket style, keeping the background - bright
+     and the text - dark */
+    background-color: transparent;
+    color: @text_color;
+    background-image: -gtk-gradient (linear,
+               0 0, 0 1,
+               color-stop(0, rgb(236, 244, 255)),
+               color-stop(1, rgb(208, 230, 255)));
+    box-shadow: inset -1px -1px 0px rgba (128, 128, 255, 0.5), inset 1px 1px 0px rgba (128, 128, 255, 0.5);
+}
+
+.list-row:selected:prelight {
+    background-image: -gtk-gradient (linear,
+               0 0, 0 1,
+               color-stop(0, rgb(221, 236, 255)),
+               color-stop(1, rgb(194, 220, 255)));
+    box-shadow: inset -1px -1px 0px rgba (128, 128, 255, 0.5), inset 1px 1px 0px rgba (128, 128, 255, 0.5);
+}
\ No newline at end of file
--- gtk/gtk-win32.css	Mon Jan 27 23:54:56 2014
+++ gtk/gtk-win32.css	Wed Apr 16 07:42:56 2014
@@ -82,3 +82,263 @@
     background-image: -gtk-win32-theme-part(menu, 11 2);
     border-width: 0;
 }
+
+/* Notebook */
+.notebook {
+    /* This prevents a thin half-transparent line between the pane and the tab */
+    background-color: -gtk-win32-color(tab, 5);
+
+    border-width: 1px 1px 1px 1px;
+    border-style: solid;
+    background-origin: padding-box;
+    background-clip: border-box;
+
+    /* W32 theme draws it with borders and all, cut them away */
+    background-image: -gtk-win32-theme-part(tab, 9 1, margins(-1 -3 -2 -1));
+
+    /* Grab the borders now and duplicate them across the perimeter */
+    border-image: -gtk-win32-theme-part(tab, 9 1, margins(0 -2 -1 0)) 1 1 1 1 repeat;
+    /* MSW7 themes draw tab overlaps differently. Net result is:
+       * inactive tab text never moves no matter which tabs get to be active
+       * active tab text moves only up
+       * active tab steals space from its neighbors (overlapping their borders without moving them)
+       * inactive tab does not steal any space from its neighbors (prelight makes that obvious - one tab's borders light up, its neighbors' don't change)
+       * first(last in RTL?) tab has extra gap that disappears (due to overlapping) when this tab activates
+       This can't be emulated in GTK, so we won't even try.
+    */
+    -GtkNotebook-tab-overlap: 0;
+    -GtkNotebook-tab-curvature: 0;
+}
+
+.notebook tab {
+    /* Make sure parts not covered by the background are transparent */
+    background-color: transparent;
+
+    /* Use GTK border, since we can control where it's drawn (unlike built-in theme border, which is always left-top-right) */
+    border-width: 1px;
+    border-style: solid;
+    border-color: rgb(137, 140, 149);
+
+    /* Sadly, GTK CSS can't rotate images, which means that we can't use tabs from the theme */
+    background-image: none;
+    /* Don't use border image either, since it has no bottom border */
+    border-image: none;
+
+    /* By default tabs are large enough for their labels, give them more space */
+    padding: 2px;
+}
+
+/* W32 has no concept of notebook header (the rectangle where tabs are - including the area where tabs could be, if you add more of them), make it disappear */
+.notebook.header {
+  background-color: transparent;
+  background-image: none;
+  border-width: 0px;
+  border-color: transparent;
+}
+
+/* Draw everything ourselves. Default MSW7 theme for a top tab (the only kind of tab available) is:
+ 1-px grey border
+ extra 1-px inside white borders to the left and the right
+ top 8 pixels of the tab are light grey gradient (from 95% to 92% here)
+ rest of the tab is dark grey gradient (quick 3-pixel fall from 87% to 85%, then uniform until half the way, then drops to 84%, last 4 pixels fall down to 81%)
+
+ Prelight tab is the same as normal, but with light blue instead of grey.
+ Active tabs (prelight ot not) are simple white.
+ Disabled tabs are simple dark grey.
+ There's also theme part for "focused" tab (simple pale blue), but it is unclear in which circumstances it's used.
+
+ Normal and selected tab borders are grey.
+ Prelight tab borders are blue.
+ Disabled tab borders are darker grey.
+ */
+.notebook tab.top {
+    background-image: -gtk-gradient (linear,
+               0 0, 0 1,
+               color-stop(0, rgb(242, 242, 242)),
+               color-stop(0.2, rgb(235, 235, 235)),
+               color-stop(0.21, rgb(221, 221, 221)),
+               color-stop(0.22, rgb(216, 216, 216)),
+               color-stop(0.6, rgb(214, 214, 214)),
+               color-stop(0.9, rgb(214, 214, 214)),
+               color-stop(1, rgb(207, 207, 207)));
+    box-shadow: inset -1px 0px 0px white, inset 1px 0px 0px white;
+    /* Tab border is 1px (see above), override bottom border (for top tabs) to be 0px */
+    border-bottom: 0px;
+}
+
+.notebook tab.top:prelight {
+    background-image: -gtk-gradient (linear,
+               0 0, 0 1,
+               color-stop(0, rgb(234, 246, 253)),
+               color-stop(0.2, rgb(217, 240, 252)),
+               color-stop(0.21, rgb(190, 230, 253)),
+               color-stop(0.22, rgb(181, 226, 250)),
+               color-stop(0.6, rgb(178, 224, 249)),
+               color-stop(0.9, rgb(175, 222, 248)),
+               color-stop(1, rgb(167, 217, 245)));
+}
+
+.notebook tab.left {
+    background-image: -gtk-gradient (linear,
+               0 0, 1 0,
+               color-stop(0, rgb(242, 242, 242)),
+               color-stop(0.2, rgb(235, 235, 235)),
+               color-stop(0.21, rgb(221, 221, 221)),
+               color-stop(0.22, rgb(216, 216, 216)),
+               color-stop(0.6, rgb(214, 214, 214)),
+               color-stop(0.9, rgb(214, 214, 214)),
+               color-stop(1, rgb(207, 207, 207)));
+
+    box-shadow: inset 0px -1px 0px white, inset 0px 1px 0px white;
+    /* Tab border is 1px (see above), override right border (for left tabs) to be 0px */
+    border-right: 0px;
+}
+
+.notebook tab.left:prelight {
+    background-image: -gtk-gradient (linear,
+               0 0, 1 0,
+               color-stop(0, rgb(234, 246, 253)),
+               color-stop(0.2, rgb(217, 240, 252)),
+               color-stop(0.21, rgb(190, 230, 253)),
+               color-stop(0.22, rgb(181, 226, 250)),
+               color-stop(0.6, rgb(178, 224, 249)),
+               color-stop(0.9, rgb(175, 222, 248)),
+               color-stop(1, rgb(167, 217, 245)));
+}
+
+.notebook tab.right {
+    background-image: -gtk-gradient (linear,
+               1 0, 0 0,
+               color-stop(0, rgb(242, 242, 242)),
+               color-stop(0.2, rgb(235, 235, 235)),
+               color-stop(0.21, rgb(221, 221, 221)),
+               color-stop(0.22, rgb(216, 216, 216)),
+               color-stop(0.6, rgb(214, 214, 214)),
+               color-stop(0.9, rgb(214, 214, 214)),
+               color-stop(1, rgb(207, 207, 207)));
+
+    box-shadow: inset 0px 1px 0px white, inset 0px -1px 0px white;
+    /* Tab border is 1px (see above), override left border (for right tabs) to be 0px */
+    border-left: 0px;
+}
+
+.notebook tab.right:prelight {
+    background-image: -gtk-gradient (linear,
+               1 0, 0 0,
+               color-stop(0, rgb(234, 246, 253)),
+               color-stop(0.2, rgb(217, 240, 252)),
+               color-stop(0.21, rgb(190, 230, 253)),
+               color-stop(0.22, rgb(181, 226, 250)),
+               color-stop(0.6, rgb(178, 224, 249)),
+               color-stop(0.9, rgb(175, 222, 248)),
+               color-stop(1, rgb(167, 217, 245)));
+}
+
+.notebook tab.bottom {
+    background-image: -gtk-gradient (linear,
+               0 1, 0 0,
+               color-stop(0, rgb(242, 242, 242)),
+               color-stop(0.2, rgb(235, 235, 235)),
+               color-stop(0.21, rgb(221, 221, 221)),
+               color-stop(0.22, rgb(216, 216, 216)),
+               color-stop(0.6, rgb(214, 214, 214)),
+               color-stop(0.9, rgb(214, 214, 214)),
+               color-stop(1, rgb(207, 207, 207)));
+    box-shadow: inset -1px 0px 0px white, inset 1px 0px 0px white;
+    /* Tab border is 1px (see above), override top border (for bottom tabs) to be 0px */
+    border-top: 0px;
+}
+
+.notebook tab.bottom:prelight {
+    background-image: -gtk-gradient (linear,
+               0 1, 0 0,
+               color-stop(0, rgb(234, 246, 253)),
+               color-stop(0.2, rgb(217, 240, 252)),
+               color-stop(0.21, rgb(190, 230, 253)),
+               color-stop(0.22, rgb(181, 226, 250)),
+               color-stop(0.6, rgb(178, 224, 249)),
+               color-stop(0.9, rgb(175, 222, 248)),
+               color-stop(1, rgb(167, 217, 245)));
+}
+
+.notebook tab:active,
+.notebook tab:active:prelight,
+.notebook tab.right:active,
+.notebook tab.right:active:prelight,
+.notebook tab.bottom:active,
+.notebook tab.bottom:active:prelight,
+.notebook tab.left:active,
+.notebook tab.left:active:prelight
+{
+    /* active tabs are pure white with grey borders, and prelight changes nothing */
+    background-image: none;
+    background-color: white;
+    border-color: rgb(137, 140, 149);
+}
+
+.notebook tab:insensitive,
+.notebook tab:insensitive,
+.notebook tab.right:insensitive,
+.notebook tab.bottom:insensitive,
+.notebook tab.left:insensitive
+{
+    /* insensitive tabs are dark grey white with even darker grey borders */
+    background-image: none;
+    background-color: rgb(201, 202, 203);
+    border-color: rgb(128, 128, 128);
+}
+
+.notebook tab:prelight,
+.notebook tab.right:prelight,
+.notebook tab.bottom:prelight,
+.notebook tab.left:prelight
+{
+    /* prelight tabs have blue borders */
+    border-color: rgb(60, 127, 177);
+}
+
+
+.notebook tab.top:active {
+    /* Make active tab "stick out" up by padding it more at the bottom */
+    padding-bottom: 4px;
+}
+
+.notebook tab.right:active {
+    /* Make active tab "stick out" right by padding it more at the left */
+    padding-left: 4px;
+}
+
+.notebook tab.bottom:active {
+    /* Make active tab "stick out" down by padding it more at the top */
+    padding-top: 4px;
+}
+
+.notebook tab.left:active {
+    /* Make active tab "stick out" left by padding it more at the right */
+    padding-right: 4px;
+}
+
+
+/* Listbox */
+
+/* We're cheating here, using part 6 (listview header group),
+   because part 1 (listview item) is empty for some reason */
+.list-row:prelight {
+  background-image: -gtk-win32-theme-part(listview, 6 10);
+}
+
+.list-row:selected {
+  background-color: transparent;
+  /* Override *:selected {} blanket style, keeping the background - bright
+     and the text - dark */
+  color: @text_color;
+  background-image: -gtk-win32-theme-part(listview, 6 13);
+}
+
+.list-row:selected:focus {
+  background-image: -gtk-win32-theme-part(listview, 6 11);
+}
+
+.list-row:selected:prelight {
+  background-image: -gtk-win32-theme-part(listview, 6 12);
+}
--- gtk/gtkiconcache.c	Tue Jan 28 03:19:46 2014
+++ gtk/gtkiconcache.c	Mon Oct 20 05:16:36 2014
@@ -110,9 +110,11 @@
 /* Bug 660730: _fstat32 is only defined in msvcrt80.dll+/VS 2005+ */
 /*             or possibly in the msvcrt.dll linked to by the Windows DDK */
 /*             (will need to check on the Windows DDK part later) */
+#ifndef __MINGW32__
 #if (_MSC_VER >= 1400 || __MSVCRT_VERSION__ >= 0x0800)
 #undef fstat /* Just in case */
 #define fstat _fstat32  
+#endif
 #endif
 #endif
 
--- gtk/gtksettings.c	Tue Jan 28 03:19:46 2014
+++ gtk/gtksettings.c	Fri Mar 21 11:18:59 2014
@@ -445,7 +445,7 @@
                                              g_param_spec_string ("gtk-fallback-icon-theme",
                                                                   P_("Fallback Icon Theme Name"),
                                                                   P_("Name of a icon theme to fall back to"),
-                                                                  NULL,
+                                                                  "gnome",
                                                                   GTK_PARAM_READWRITE),
                                              NULL);
   g_assert (result == PROP_FALLBACK_ICON_THEME);
@@ -542,7 +542,11 @@
                                              g_param_spec_string ("gtk-xft-hintstyle",
                                                                   P_("Xft Hint Style"),
                                                                   P_("What degree of hinting to use; hintnone, hintslight, hintmedium, or hintfull"),
+#ifdef G_OS_WIN32
+                                                                  "hintfull",
+#else
                                                                   NULL,
+#endif
                                                                   GTK_PARAM_READWRITE),
                                               NULL);
 
@@ -552,7 +556,11 @@
                                              g_param_spec_string ("gtk-xft-rgba",
                                                                   P_("Xft RGBA"),
                                                                   P_("Type of subpixel antialiasing; none, rgb, bgr, vrgb, vbgr"),
+#ifdef G_OS_WIN32
+                                                                  "rgb",
+#else
                                                                   NULL,
+#endif
                                                                   GTK_PARAM_READWRITE),
                                              NULL);
 
--- gtk/Makefile.in	Tue Jan 28 03:20:44 2014
+++ gtk/Makefile.in	Sat May 24 19:26:36 2014
@@ -1133,7 +1133,7 @@
 EXTRA_DIST = $(gtk_all_private_h_sources) $(gtk_extra_sources) \
 	$(gtk_built_sources) $(STOCK_ICONS) gtkbuilder.rnc \
 	gtkbuilder.rng $(STOCK_ICONS) $(DND_CURSORS) \
-	$(GENERATED_ICONS) gtk.def gtk-win32.rc gtk-win32.rc.in \
+	$(GENERATED_ICONS) gtk-win32.rc gtk-win32.rc.in \
 	gtkwin32embed.h gtkwin32embedwidget.h gtkwin32embedwidget.c \
 	gtkprint-win32.h gtkprint-win32.c gtksearchenginequartz.h \
 	gtk.gresource.xml gtkdbusinterfaces.xml gtk-default.css \
@@ -1212,8 +1212,8 @@
 	$(INCLUDED_IMMODULE_DEFINE)
 
 @PLATFORM_WIN32_TRUE@no_undefined = -no-undefined
-@OS_WIN32_TRUE@gtk_def = gtk.def
-@OS_WIN32_TRUE@gtk_win32_symbols = -export-symbols $(srcdir)/gtk.def
+@OS_WIN32_TRUE@gtk_def = 
+@OS_WIN32_TRUE@gtk_win32_symbols = 
 @OS_WIN32_TRUE@gtk_win32_res = gtk-win32-res.o
 @OS_WIN32_TRUE@gtk_win32_res_ldflag = -Wl,gtk-win32-res.o
 @MS_LIB_AVAILABLE_TRUE@noinst_DATA = gtk-win32-$(GTK_API_VERSION).lib
@@ -2128,107 +2128,6 @@
 gtk_launch_LDADD = $(LDADDS)
 gtk_launch_SOURCES = gtk-launch.c
 STOCK_ICONS = \
-	stock-icons/16/document-open-recent.png		\
-	stock-icons/16/help-about.png 			\
-	stock-icons/16/list-add.png 			\
-	stock-icons/16/media-optical.png 		\
-	stock-icons/16/window-close.png 		\
-	stock-icons/16/gtk-connect.png 			\
-	stock-icons/16/gtk-convert.png 			\
-	stock-icons/16/edit-clear.png 			\
-	stock-icons/16/edit-copy.png 			\
-	stock-icons/16/edit-cut.png 			\
-	stock-icons/16/edit-delete.png 			\
-	stock-icons/16/folder.png 			\
-	stock-icons/16/gtk-disconnect.png 		\
-	stock-icons/16/gtk-edit.png 			\
-	stock-icons/16/system-run.png 			\
-	stock-icons/16/text-x-generic.png 		\
-	stock-icons/16/edit-find-replace.png 		\
-	stock-icons/16/edit-find.png 			\
-	stock-icons/16/media-floppy.png 		\
-	stock-icons/16/view-fullscreen.png 		\
-	stock-icons/16/go-previous-ltr.png 		\
-	stock-icons/16/go-down.png 			\
-	stock-icons/16/go-next-ltr.png 			\
-	stock-icons/16/go-bottom.png 			\
-	stock-icons/16/go-first-ltr.png 		\
-	stock-icons/16/go-last-ltr.png 			\
-	stock-icons/16/go-top.png 			\
-	stock-icons/16/go-up.png 			\
-	stock-icons/16/gtk-caps-lock-warning.png	\
-	stock-icons/16/gtk-color-picker.png		\
-	stock-icons/16/drive-harddisk.png 		\
-	stock-icons/16/help-contents.png 		\
-	stock-icons/16/go-home.png 			\
-	stock-icons/16/format-indent-more-ltr.png 	\
-	stock-icons/16/format-indent-more-rtl.png 	\
-	stock-icons/16/gtk-index.png 			\
-	stock-icons/16/dialog-information.png		\
-	stock-icons/16/go-jump-ltr.png 			\
-	stock-icons/16/go-jump-rtl.png 			\
-	stock-icons/16/format-justify-center.png 	\
-	stock-icons/16/format-justify-fill.png 		\
-	stock-icons/16/format-justify-left.png 		\
-	stock-icons/16/format-justify-right.png 	\
-	stock-icons/16/view-restore.png 		\
-	stock-icons/16/media-seek-forward-ltr.png 	\
-	stock-icons/16/media-skip-forward-ltr.png 	\
-	stock-icons/16/media-playback-pause.png 	\
-	stock-icons/16/media-playback-start-ltr.png 	\
-	stock-icons/16/media-playback-start-rtl.png 	\
-	stock-icons/16/media-skip-backward-ltr.png 	\
-	stock-icons/16/media-record.png 		\
-	stock-icons/16/media-seek-backward-ltr.png 	\
-	stock-icons/16/media-playback-stop.png 		\
-	stock-icons/16/image-missing.png 		\
-	stock-icons/16/network-idle.png 		\
-	stock-icons/16/document-new.png 		\
-	stock-icons/16/document-open.png 		\
-	stock-icons/16/gtk-orientation-landscape.png	\
-	stock-icons/16/gtk-orientation-portrait.png	\
-	stock-icons/16/gtk-orientation-reverse-landscape.png \
-	stock-icons/16/gtk-orientation-reverse-portrait.png \
-	stock-icons/16/gtk-page-setup.png 		\
-	stock-icons/16/edit-paste.png 			\
-	stock-icons/16/gtk-preferences.png 		\
-	stock-icons/16/document-print.png 		\
-	stock-icons/16/printer-error.png 		\
-	stock-icons/16/printer-paused.png 		\
-	stock-icons/16/document-print-preview.png 	\
-	stock-icons/16/printer-info.png 		\
-	stock-icons/16/printer-warning.png 		\
-	stock-icons/16/document-properties.png 		\
-	stock-icons/16/application-exit.png 		\
-	stock-icons/16/edit-redo-ltr.png 		\
-	stock-icons/16/edit-redo-rtl.png 		\
-	stock-icons/16/view-refresh.png 		\
-	stock-icons/16/list-remove.png 			\
-	stock-icons/16/document-revert-ltr.png 		\
-	stock-icons/16/document-revert-rtl.png 		\
-	stock-icons/16/document-save-as.png 		\
-	stock-icons/16/edit-select-all.png 		\
-	stock-icons/16/gtk-select-color.png 		\
-	stock-icons/16/gtk-select-font.png 		\
-	stock-icons/16/view-sort-ascending.png 		\
-	stock-icons/16/view-sort-descending.png 	\
-	stock-icons/16/tools-check-spelling.png 	\
-	stock-icons/16/process-stop.png 		\
-	stock-icons/16/format-text-strikethrough.png 	\
-	stock-icons/16/gtk-font.png 			\
-	stock-icons/16/gtk-undelete-ltr.png 		\
-	stock-icons/16/gtk-undelete-rtl.png 		\
-	stock-icons/16/format-text-underline.png 	\
-	stock-icons/16/edit-undo-ltr.png 		\
-	stock-icons/16/edit-undo-rtl.png 		\
-	stock-icons/16/format-indent-less-ltr.png 	\
-	stock-icons/16/format-indent-less-rtl.png 	\
-	stock-icons/16/zoom-original.png 		\
-	stock-icons/16/zoom-fit-best.png 		\
-	stock-icons/16/zoom-in.png 			\
-	stock-icons/16/zoom-out.png 			\
-	stock-icons/16/format-text-italic.png 		\
-	stock-icons/16/format-text-bold.png 		\
 	stock-icons/20/gtk-apply.png  			\
 	stock-icons/20/gtk-cancel.png 			\
 	stock-icons/20/window-close.png 		\
@@ -2349,18 +2248,6 @@
 	stock-icons/48/dialog-warning.png
 
 GENERATED_ICONS = \
-	stock-icons/16/go-previous-rtl.png 		\
-	stock-icons/16/go-next-rtl.png 			\
-	stock-icons/16/go-first-rtl.png 		\
-	stock-icons/16/go-last-rtl.png 			\
-	stock-icons/16/media-seek-forward-rtl.png 	\
-	stock-icons/16/media-skip-forward-rtl.png 	\
-	stock-icons/16/media-skip-backward-rtl.png 	\
-	stock-icons/16/media-seek-backward-rtl.png 	\
-	stock-icons/16/document-save.png 		\
-	stock-icons/16/folder-remote.png 		\
-	stock-icons/16/user-home.png 			\
-	stock-icons/16/user-desktop.png 		\
 	stock-icons/24/go-previous-rtl.png 		\
 	stock-icons/24/go-next-rtl.png 			\
 	stock-icons/24/go-first-rtl.png 		\
@@ -6078,10 +5965,8 @@
 @OS_WIN32_TRUE@gtk-win32-res.o : gtk-win32.rc
 @OS_WIN32_TRUE@	$(WINDRES) gtk-win32.rc $@
 
-@OS_WIN32_TRUE@install-def-file: gtk.def
-@OS_WIN32_TRUE@	$(INSTALL) $(srcdir)/gtk.def $(DESTDIR)$(libdir)/gtk-win32-3.0.def
-@OS_WIN32_TRUE@uninstall-def-file:
-@OS_WIN32_TRUE@	-rm $(DESTDIR)$(libdir)/gtk-win32-3.0.def
+@OS_WIN32_TRUE@install-def-file: 
+@OS_WIN32_TRUE@uninstall-def-file: 
 @OS_WIN32_FALSE@install-def-file:
 @OS_WIN32_FALSE@uninstall-def-file:
 
--- configure	Tue Jan 28 03:20:40 2014
+++ configure	Mon Sep 29 16:07:00 2014
@@ -19821,7 +19821,7 @@
 if test "x$enable_broadway_backend" = xyes; then
   GDK_BACKENDS="$GDK_BACKENDS broadway"
   cairo_backends="$cairo_backends cairo"
-  have_gio_unix=yes
+  #have_gio_unix=yes
   GDK_WINDOWING="$GDK_WINDOWING
 #define GDK_WINDOWING_BROADWAY"
   GDK_EXTRA_LIBS="$GDK_EXTRA_LIBS -lz"
