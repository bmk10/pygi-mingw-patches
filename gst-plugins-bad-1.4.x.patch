relocatable patches
configure: static build and cross compile workaround

--- ext/gl/Makefile.in	Wed Sep 24 14:30:47 2014
+++ ext/gl/Makefile.in	Thu Oct 23 18:27:01 2014
@@ -849,7 +849,7 @@
 # check order of CFLAGS and LIBS, shouldn't the order be the other way around
 # (like in AM_CFLAGS)?
 libgstopengl_la_CFLAGS = \
-	-I$(top_srcdir)/gst-libs \
+	-msse2 -I$(top_srcdir)/gst-libs \
 	-I$(top_builddir)/gst-libs \
 	$(GST_CFLAGS) \
 	$(GST_BASE_CFLAGS) \
--- ext/ladspa/gstladspa.c	Mon Jul 21 15:25:53 2014
+++ ext/ladspa/gstladspa.c	Tue Oct 14 10:11:43 2014
@@ -149,6 +149,21 @@
   "/usr/local/lib/ladspa" G_SEARCHPATH_SEPARATOR_S \
   LIBDIR "/ladspa"
 
+#ifdef G_OS_WIN32
+#include <windows.h>
+HMODULE gstl_dll = NULL;
+BOOL WINAPI
+DllMain (HINSTANCE hinstDLL,
+	 DWORD     fdwReason,
+	 LPVOID    lpvReserved)
+{
+  if (fdwReason == DLL_PROCESS_ATTACH)
+      gstl_dll = hinstDLL;
+
+  return TRUE;
+}
+#endif
+
 GstStructure *ladspa_meta_all = NULL;
 
 static void
@@ -342,7 +357,11 @@
         g_strdup_printf ("%s" G_SEARCHPATH_SEPARATOR_S GST_LADSPA_DEFAULT_PATH,
         search_path);
   } else {
+#ifdef G_OS_WIN32
+    ladspa_path = g_build_filename (g_win32_get_package_installation_directory_of_module (gstl_dll),"..","ladspa", NULL);
+#else
     ladspa_path = g_strdup (GST_LADSPA_DEFAULT_PATH);
+#endif
   }
 
   paths = g_strsplit (ladspa_path, G_SEARCHPATH_SEPARATOR_S, 0);
@@ -404,7 +423,14 @@
 #ifdef ENABLE_NLS
   GST_DEBUG ("binding text domain %s to locale dir %s", GETTEXT_PACKAGE,
       LOCALEDIR);
+#ifdef G_OS_WIN32
+    gchar *_glib_get_locale_dir (void);
+    gchar *localedir = _glib_get_locale_dir ();
+    bindtextdomain (GETTEXT_PACKAGE, localedir);
+    g_free (localedir);
+#else
   bindtextdomain (GETTEXT_PACKAGE, LOCALEDIR);
+#endif
   bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
 #endif
 
--- ext/neon/gstneonhttpsrc.c	Mon Jul 21 15:25:53 2014
+++ ext/neon/gstneonhttpsrc.c	Thu Oct 02 07:52:58 2014
@@ -1101,6 +1101,23 @@
 static gboolean
 plugin_init (GstPlugin * plugin)
 {
+#ifdef G_OS_WIN32
+	gchar * cafile = NULL;
+	gchar * set_necabundle_env;
+	const gchar * const *dirs = g_get_system_data_dirs();
+	int i;
+
+	for (i = 0; dirs[i]; ++i) {
+		cafile = g_build_filename (dirs[i], "ssl", "curl-ca-bundle.crt", NULL);
+		if (!g_file_test (cafile, G_FILE_TEST_IS_REGULAR))
+			g_free (cafile);
+		else {
+			set_necabundle_env = g_strconcat("NE_SSL_CA_BUNDLE=",cafile,NULL);
+			putenv(set_necabundle_env);
+			g_free(set_necabundle_env);
+		}
+	}
+#endif
   GST_DEBUG_CATEGORY_INIT (neonhttpsrc_debug, "neonhttpsrc", 0,
       "NEON HTTP src");
 
--- ext/openal/gstopenal.c	Mon Jul 21 15:25:53 2014
+++ ext/openal/gstopenal.c	Thu Oct 02 07:03:31 2014
@@ -47,7 +47,14 @@
 #ifdef ENABLE_NLS
   GST_DEBUG ("binding text domain %s to locale dir %s", GETTEXT_PACKAGE,
       LOCALEDIR);
+#ifdef G_OS_WIN32
+    gchar *_glib_get_locale_dir (void);
+    gchar *localedir = _glib_get_locale_dir ();
+    bindtextdomain (GETTEXT_PACKAGE, localedir);
+    g_free (localedir);
+#else
   bindtextdomain (GETTEXT_PACKAGE, LOCALEDIR);
+#endif
   bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
 #endif
 
--- ext/opencv/gstfaceblur.c	Mon Jul 21 15:25:53 2014
+++ ext/opencv/gstfaceblur.c	Wed Oct 15 19:56:04 2014
@@ -68,10 +68,13 @@
 GST_DEBUG_CATEGORY_STATIC (gst_face_blur_debug);
 #define GST_CAT_DEFAULT gst_face_blur_debug
 
+#ifdef G_OS_WIN32
+static gchar *DEFAULT_PROFILE = NULL;
+#else
 #define DEFAULT_PROFILE OPENCV_PREFIX G_DIR_SEPARATOR_S "share" \
     G_DIR_SEPARATOR_S "opencv" G_DIR_SEPARATOR_S "haarcascades" \
     G_DIR_SEPARATOR_S "haarcascade_frontalface_default.xml"
-
+#endif
 enum
 {
   PROP_0,
@@ -286,6 +289,16 @@
 gboolean
 gst_face_blur_plugin_init (GstPlugin * plugin)
 {
+#ifdef G_OS_WIN32
+  const gchar * const *dirs = g_get_system_data_dirs();
+  int i;
+  for (i = 0; dirs[i]; ++i) {
+    DEFAULT_PROFILE = g_build_filename (dirs[i], "opencv", "haarcascades", "haarcascade_frontalface_default.xml", NULL);
+    if (!g_file_test (DEFAULT_PROFILE, G_FILE_TEST_IS_REGULAR)) {
+      g_free (DEFAULT_PROFILE);
+    }
+  }
+#endif
   /* debug category for filtering log messages */
   GST_DEBUG_CATEGORY_INIT (gst_face_blur_debug, "faceblur",
       0, "Blurs faces in images and videos");
--- ext/opencv/gstfacedetect.c	Tue Jul 22 19:32:33 2014
+++ ext/opencv/gstfacedetect.c	Wed Oct 15 19:56:01 2014
@@ -86,10 +86,17 @@
 #define HAAR_CASCADES_DIR OPENCV_PREFIX G_DIR_SEPARATOR_S "share" \
     G_DIR_SEPARATOR_S "opencv" G_DIR_SEPARATOR_S "haarcascades" \
     G_DIR_SEPARATOR_S
+#ifdef G_OS_WIN32
+static gchar *DEFAULT_FACE_PROFILE = NULL;
+static gchar *DEFAULT_NOSE_PROFILE = NULL;
+static gchar *DEFAULT_MOUTH_PROFILE = NULL;
+static gchar *DEFAULT_EYES_PROFILE = NULL;
+#else
 #define DEFAULT_FACE_PROFILE HAAR_CASCADES_DIR "haarcascade_frontalface_default.xml"
 #define DEFAULT_NOSE_PROFILE HAAR_CASCADES_DIR "haarcascade_mcs_nose.xml"
 #define DEFAULT_MOUTH_PROFILE HAAR_CASCADES_DIR "haarcascade_mcs_mouth.xml"
 #define DEFAULT_EYES_PROFILE HAAR_CASCADES_DIR "haarcascade_mcs_eyepair_small.xml"
+#endif
 #define DEFAULT_SCALE_FACTOR 1.1
 #define DEFAULT_FLAGS 0
 #define DEFAULT_MIN_NEIGHBORS 3
@@ -783,6 +790,28 @@
 gboolean
 gst_face_detect_plugin_init (GstPlugin * plugin)
 {
+#ifdef G_OS_WIN32
+  const gchar * const *dirs = g_get_system_data_dirs();
+  int i;
+  for (i = 0; dirs[i]; ++i) {
+    DEFAULT_FACE_PROFILE = g_build_filename (dirs[i], "opencv", "haarcascades", "haarcascade_frontalface_default.xml", NULL);
+    if (!g_file_test (DEFAULT_FACE_PROFILE, G_FILE_TEST_IS_REGULAR)) {
+      g_free (DEFAULT_FACE_PROFILE);
+    }
+    DEFAULT_NOSE_PROFILE = g_build_filename (dirs[i], "opencv", "haarcascades", "haarcascade_mcs_nose.xml", NULL);
+    if (!g_file_test (DEFAULT_NOSE_PROFILE, G_FILE_TEST_IS_REGULAR)) {
+      g_free (DEFAULT_NOSE_PROFILE);
+    }
+    DEFAULT_MOUTH_PROFILE = g_build_filename (dirs[i], "opencv", "haarcascades", "haarcascade_mcs_mouth.xml", NULL);
+    if (!g_file_test (DEFAULT_MOUTH_PROFILE, G_FILE_TEST_IS_REGULAR)) {
+      g_free (DEFAULT_MOUTH_PROFILE);
+    }
+    DEFAULT_EYES_PROFILE = g_build_filename (dirs[i], "opencv", "haarcascades", "haarcascade_mcs_eyepair_small.xml", NULL);
+    if (!g_file_test (DEFAULT_EYES_PROFILE, G_FILE_TEST_IS_REGULAR)) {
+      g_free (DEFAULT_EYES_PROFILE);
+    }
+  }
+#endif
   /* debug category for fltering log messages */
   GST_DEBUG_CATEGORY_INIT (gst_face_detect_debug, "facedetect",
       0,
--- ext/opencv/gsthanddetect.c	Mon Jul 21 15:25:53 2014
+++ ext/opencv/gsthanddetect.c	Wed Oct 15 19:55:57 2014
@@ -68,9 +68,13 @@
 #define GST_CAT_DEFAULT gst_handdetect_debug
 
 /* define HAAR files */
+#ifdef G_OS_WIN32
+static gchar *HAAR_FILE_FIST = NULL;
+static gchar *HAAR_FILE_PALM = NULL;
+#else
 #define HAAR_FILE_FIST GST_HAAR_CASCADES_DIR G_DIR_SEPARATOR_S "fist.xml"
 #define HAAR_FILE_PALM GST_HAAR_CASCADES_DIR G_DIR_SEPARATOR_S "palm.xml"
-
+#endif
 /* Filter signals and args */
 enum
 {
@@ -636,6 +641,20 @@
 gboolean
 gst_handdetect_plugin_init (GstPlugin * plugin)
 {
+#ifdef G_OS_WIN32
+  const gchar * const *dirs = g_get_system_data_dirs();
+  int i;
+  for (i = 0; dirs[i]; ++i) {
+    HAAR_FILE_FIST = g_build_filename (dirs[i], "opencv", "haarcascades", "fist.xml", NULL);
+    if (!g_file_test (HAAR_FILE_FIST, G_FILE_TEST_IS_REGULAR)) {
+      g_free (HAAR_FILE_FIST);
+    }
+    HAAR_FILE_PALM = g_build_filename (dirs[i], "opencv", "haarcascades", "palm.xml", NULL);
+    if (!g_file_test (HAAR_FILE_PALM, G_FILE_TEST_IS_REGULAR)) {
+      g_free (HAAR_FILE_PALM);
+    }
+  }
+#endif
   GST_DEBUG_CATEGORY_INIT (gst_handdetect_debug,
       "handdetect", 0, "opencv hand gesture detection");
   return gst_element_register (plugin, "handdetect", GST_RANK_NONE,
--- ext/resindvd/plugin.c	Mon Jul 21 15:25:53 2014
+++ ext/resindvd/plugin.c	Thu Oct 02 07:04:12 2014
@@ -41,7 +41,14 @@
 #ifdef ENABLE_NLS
   GST_DEBUG ("binding text domain %s to locale dir %s", GETTEXT_PACKAGE,
       LOCALEDIR);
+#ifdef G_OS_WIN32
+    gchar *_glib_get_locale_dir (void);
+    gchar *localedir = _glib_get_locale_dir ();
+    bindtextdomain (GETTEXT_PACKAGE, localedir);
+    g_free (localedir);
+#else
   bindtextdomain (GETTEXT_PACKAGE, LOCALEDIR);
+#endif
   bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
 #endif
 
--- ext/sndfile/gstsf.c	Mon Jul 21 15:25:53 2014
+++ ext/sndfile/gstsf.c	Thu Oct 02 07:02:15 2014
@@ -117,7 +117,14 @@
 #ifdef ENABLE_NLS
   GST_DEBUG ("binding text domain %s to locale dir %s", GETTEXT_PACKAGE,
       LOCALEDIR);
+#ifdef G_OS_WIN32
+    gchar *_glib_get_locale_dir (void);
+    gchar *localedir = _glib_get_locale_dir ();
+    bindtextdomain (GETTEXT_PACKAGE, localedir);
+    g_free (localedir);
+#else
   bindtextdomain (GETTEXT_PACKAGE, LOCALEDIR);
+#endif
   bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
 #endif /* ENABLE_NLS */
 
--- gst/aiff/aiff.c	Mon Jul 21 15:25:53 2014
+++ gst/aiff/aiff.c	Thu Oct 02 07:00:50 2014
@@ -47,7 +47,14 @@
 #ifdef ENABLE_NLS
   GST_DEBUG ("binding text domain %s to locale dir %s", GETTEXT_PACKAGE,
       LOCALEDIR);
+#ifdef G_OS_WIN32
+    gchar *_glib_get_locale_dir (void);
+    gchar *localedir = _glib_get_locale_dir ();
+    bindtextdomain (GETTEXT_PACKAGE, localedir);
+    g_free (localedir);
+#else
   bindtextdomain (GETTEXT_PACKAGE, LOCALEDIR);
+#endif
   bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
 #endif
 
--- gst/frei0r/gstfrei0r.c	Mon Jul 21 15:25:53 2014
+++ gst/frei0r/gstfrei0r.c	Thu Sep 25 18:05:58 2014
@@ -29,6 +29,21 @@
 #include <string.h>
 #include <gmodule.h>
 
+#ifdef G_OS_WIN32
+#include <windows.h>
+HMODULE gstf_dll = NULL;
+BOOL WINAPI
+DllMain (HINSTANCE hinstDLL,
+	 DWORD     fdwReason,
+	 LPVOID    lpvReserved)
+{
+  if (fdwReason == DLL_PROCESS_ATTACH)
+      gstf_dll = hinstDLL;
+
+  return TRUE;
+}
+#endif
+
 GST_DEBUG_CATEGORY (frei0r_debug);
 #define GST_CAT_DEFAULT frei0r_debug
 
@@ -690,7 +705,11 @@
 #define register_plugins2(plugin, pn, p) register_plugins(plugin, pn, p, p)
     homedir = g_get_home_dir ();
     path = g_build_filename (homedir, ".frei0r-1", "lib", NULL);
+#ifdef G_OS_WIN32
+    libdir_path = g_build_filename (g_win32_get_package_installation_directory_of_module (gstf_dll),"..","frei0r-1", NULL);
+#else
     libdir_path = g_build_filename (LIBDIR, "frei0r-1", NULL);
+#endif
     register_plugins2 (plugin, plugin_names, path);
     g_free (path);
     register_plugins2 (plugin, plugin_names, libdir_path);
--- gst/midi/midi.c	Mon Jul 21 15:25:53 2014
+++ gst/midi/midi.c	Thu Oct 02 07:00:26 2014
@@ -41,7 +41,14 @@
 #ifdef ENABLE_NLS
   GST_DEBUG ("binding text domain %s to locale dir %s", GETTEXT_PACKAGE,
       LOCALEDIR);
+#ifdef G_OS_WIN32
+    gchar *_glib_get_locale_dir (void);
+    gchar *localedir = _glib_get_locale_dir ();
+    bindtextdomain (GETTEXT_PACKAGE, localedir);
+    g_free (localedir);
+#else
   bindtextdomain (GETTEXT_PACKAGE, LOCALEDIR);
+#endif
   bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
 #endif
 
--- gst/nuvdemux/gstnuvdemux.c	Mon Jul 21 15:25:53 2014
+++ gst/nuvdemux/gstnuvdemux.c	Thu Oct 02 07:01:17 2014
@@ -929,7 +929,14 @@
 #ifdef ENABLE_NLS
   GST_DEBUG ("binding text domain %s to locale dir %s", GETTEXT_PACKAGE,
       LOCALEDIR);
+#ifdef G_OS_WIN32
+    gchar *_glib_get_locale_dir (void);
+    gchar *localedir = _glib_get_locale_dir ();
+    bindtextdomain (GETTEXT_PACKAGE, localedir);
+    g_free (localedir);
+#else
   bindtextdomain (GETTEXT_PACKAGE, LOCALEDIR);
+#endif
 #endif /* ENABLE_NLS */
 
   if (!gst_element_register (plugin, "nuvdemux", GST_RANK_SECONDARY,
--- gst/videomeasure/gstvideomeasure.c	Mon Jul 21 15:25:53 2014
+++ gst/videomeasure/gstvideomeasure.c	Thu Oct 02 07:01:50 2014
@@ -52,7 +52,14 @@
 #ifdef ENABLE_NLS
   GST_DEBUG ("binding text domain %s to locale dir %s", GETTEXT_PACKAGE,
       LOCALEDIR);
+#ifdef G_OS_WIN32
+    gchar *_glib_get_locale_dir (void);
+    gchar *localedir = _glib_get_locale_dir ();
+    bindtextdomain (GETTEXT_PACKAGE, localedir);
+    g_free (localedir);
+#else
   bindtextdomain (GETTEXT_PACKAGE, LOCALEDIR);
+#endif
   bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
 #endif
 
--- configure	Wed Sep 24 14:30:44 2014
+++ configure	Mon Nov 03 05:41:30 2014
@@ -40824,7 +40824,7 @@
 
 
     if test "x$HAVE_FLITE" = "xyes"; then
-            FLITE_LIBS="-lflite -lflite_cmu_us_kal -lflite_usenglish -lflite_cmulex $LIBM"
+            FLITE_LIBS="-lflite_cmu_us_kal -lflite_usenglish -lflite_cmulex -lflite $LIBM"
     else
       :
     fi
@@ -42083,7 +42083,7 @@
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-lsrtp  $LIBS"
+LIBS="-lsrtp -lws2_32 $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -42129,7 +42129,7 @@
 
 
     if test "x$HAVE_SRTP" = "xyes"; then
-            SRTP_LIBS="-lsrtp"
+            SRTP_LIBS="-lsrtp -lws2_32"
     else
       HAVE_SRTP="no"
     fi
@@ -42883,16 +42883,18 @@
       ac_fn_cxx_check_header_mongrel "$LINENO" "mpeg2encoder.hh" "ac_cv_header_mpeg2encoder_hh" "$ac_includes_default"
 if test "x$ac_cv_header_mpeg2encoder_hh" = xyes; then :
 
-        MPEG2ENC_LIBS="$MPEG2ENC_LIBS -lmpeg2encpp $LIBM -lpthread"
+        MPEG2ENC_LIBS="-lmpeg2encpp $MPEG2ENC_LIBS $LIBM -lpthread"
         OLD_LIBS="$LIBS"
         LIBS="$LIBS $MPEG2ENC_LIBS"
         { $as_echo "$as_me:${as_lineno-$LINENO}: checking for valid mpeg2enc objects" >&5
 $as_echo_n "checking for valid mpeg2enc objects... " >&6; }
         if test "$cross_compiling" = yes; then :
-  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
-as_fn_error $? "cannot run test program while cross compiling
-See \`config.log' for more details" "$LINENO" 5; }
+#  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+#$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+#as_fn_error $? "cannot run test program while cross compiling
+#See \`config.log' for more details" "$LINENO" 5; }
+        CPPFLAGS="$CPPFLAGS_GOOD"
+        HAVE_MPEG2ENC="yes"
 else
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
@@ -43297,7 +43299,7 @@
       ac_fn_cxx_check_header_mongrel "$LINENO" "interact.hpp" "ac_cv_header_interact_hpp" "$ac_includes_default"
 if test "x$ac_cv_header_interact_hpp" = xyes; then :
 
-        MPLEX_LIBS="$MPLEX_LIBS -lmplex2 $LIBM"
+        MPLEX_LIBS="-lmplex2 $MPLEX_LIBS $LIBM"
         OLD_LIBS="$LIBS"
         LIBS="$LIBS $MPLEX_LIBS"
         OLD_LDFLAGS="$LDFLAGS"
@@ -43305,10 +43307,12 @@
                         { $as_echo "$as_me:${as_lineno-$LINENO}: checking for valid mplex objects" >&5
 $as_echo_n "checking for valid mplex objects... " >&6; }
         if test "$cross_compiling" = yes; then :
-  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
-as_fn_error $? "cannot run test program while cross compiling
-See \`config.log' for more details" "$LINENO" 5; }
+#  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+#$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+#as_fn_error $? "cannot run test program while cross compiling
+#See \`config.log' for more details" "$LINENO" 5; }
+          HAVE_MPLEX="yes"
+          CPPFLAGS="$CPPFLAGS_GOOD"
 else
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
@@ -50761,7 +50765,7 @@
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-lgme  $LIBS"
+LIBS="-lgme -lstdc++ $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -50793,7 +50797,7 @@
 $as_echo "$ac_cv_lib_gme_gme_new_emu" >&6; }
 if test "x$ac_cv_lib_gme_gme_new_emu" = xyes; then :
 
-      GME_LIBS="-lgme"
+      GME_LIBS="-lgme -lstdc++"
 
       HAVE_GME=yes
 
